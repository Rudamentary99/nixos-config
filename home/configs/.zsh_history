npm clean
npm run clean
npm run test
 npm run clean
npm run test
ddev robo local:update ed.local
npx open
cypress open 
npx cypress open
npm run clean
npm run test
npm run clean
npm run test
npm run clean
npm run test
npm run clean 
npm run test
npm run clean
npm run test
npm run clean
npm run test
npm rnpx cypress open
npx cypress ope
npx cypress open
npx cypress run
npm run clean 
npm run test
npm run clean
npm run clean
npm run test
npm run clean
npm run clean
npm run test
npm run test
npm run test
npm run clean
npm run test
npm run clean
npm run test
npm run clean
npm run test
npm run clean
npm run test
npm run clean
npm run test
npm i -D cypress-wait-until;
exit
cd tests
npx cypress run
npx cypress run
npm run clean-reports
npx cypress run
ddev robo local:update ed.local
ddev robo update:local ed.local
ddev robo local:update ed.loal
ddev robo local:update ed.local
ddev start
ddev robo local:update ed.local
npx cypress open
npx cypress open
npx cypress run
npx cypress open
npx cypress open
ddev robo local:update
ddev composer install
ddev robo local:update
npx cypress open
cd tests
npx cypress open
npm install -D cypress-wait-until
npm i
npm i
npx cypress run
npm i
npx cypress run
npm i
npm i -D @badeball/cypress-cucumber-preprocessor
npm i --force
npm i -D cypress-wait-until
npm i -D cypress-wait-until --force
npx cypress open
npx cypress open
ddev robo local:update
ddev robo local:update]
ddev robo cim -y
ddev @ed.local cim -y
ddev drush @ed.local cim -y
ddev robo local:update
ddev robo local:update ed.local
ddev robo local:update
cd test'\

cd test
cd tests
npx cypress open 
ddev robo local:update
ddev robo local:update ed.local
ddev robo local:update ed.local
ddev start
composer install
ddev robo local:update
ddev robo local:update ed.local
ddev start
ddev local:update
ddev robo local:update
ddev robo local:update ed.local
ddev robo local:update ed.local
ddev robo local:update ed.local
ddev robo local:update ed.local
ddev robo local:update
ddev robo local:update ed.local
ddev robo local:update ed.local
nvim
nvim :Tutorial
nvim
nvim tutor
nvim
nvim
cd .config
ls
cd nvim
cd ..
ls
cat tutor
rm TEST
rm tutor
ls
cd .config
mkdir nvim
cd nvim
nvim ini.lua
nvim
\:q
python -v
python3 -v
which python
which python2
which python 3
which python3
pip install -U pynvim
cd .config/nvim
ls
mv ini.vim init.vom
ls
mv ini.lua init.lua
ls
mkdir lua
mkdir lua/plugins
ls
cd lua
ls
rmdir plugins
mkdir core/plugins.lua
nvim core/plugins.lua
ls
mkdir core
ls
vim core/plugins.lua
cd ..
ls
nvim init.lua
ls
tree
tee
cat lua/core
cat lua/core/plugins.lua
nvim init.lua
nvim init.lua
nvim lua/core/plugins.lua
rmdir lua
rm lua
del lua
rm -rf lua
ls
nvim lua/core/plugins.lua
mkdir -p lua/core
nvim init.lua
nvim lua/core/keymaps.lua
ls lua/core
nvim init.lua
nvim lua/core/plugins.lua
nvim init.lua
nvim init.lua
$ nvim --headless -c 'autocmd User PackerComplete quitall' -c 'PackerSync'
 nvim --headless -c 'autocmd User PackerComplete quitall' -c 'PackerSync'
nvim init.lua
nvim lua/core/plugins.lua
nvim lua/core/plugins.lua
mkdir lua/core/plugin_config
cd lua/core/plugin_config
touch gruvbox.lua
touch lualine.lua
touch nvimtree
rm gruvbox.lua
rm lua
rm lualine.lua
rm nvimtree
cd ..
rm plugin_config
rmdir pugin_config
rmdir plugin_config
ls
$ nvim --headless -c 'autocmd User PackerComplete quitall' -c 'PackerSync'
 nvim --headless -c 'autocmd User PackerComplete quitall' -c 'PackerSync'\
Usage\
\
The above snippets give some examples of packer features and use. Examples include:\
\
My dotfiles:\
Specification file\
Loading file\
Generated lazy-loader file\
An example using the startup method: tjdevries\
Using this method, you do not require a "loading" file. You can simply lua require('plugins') from your init.vim\
The following is a more in-depth explanation of packer's features and use.\
\
The startup function\
\
packer provides packer.startup(spec), which is used in the above examples.\
\
startup is a convenience function for simple setup and can be invoked as follows:\
\
spec can be a function: packer.startup(function() use 'tjdevries/colorbuddy.vim' end)\
spec can be a table with a function as its first element and config overrides as another element: packer.startup({function() use 'tjdevries/colorbuddy.vim' end, config = { ... }})\
spec can be a table with a table of plugin specifications as its first element, config overrides as another element, and optional rock specifications as another element: packer.startup({{'tjdevries/colorbuddy.vim'}, config = { ... }, rocks = { ... }})\
Custom Initialization\
\
You are not required to use packer.startup if you prefer a more manual setup with finer control over configuration and loading.\
\
To take this approach, load packer like any other Lua module. You must call packer.init() before performing any operations; it is recommended to call packer.reset() if you may be re-running your specification code (e.g. by sourcing your plugin specification file with luafile).\
\
You may pass a table of configuration values to packer.init() to customize its operation. The default configuration values (and structure of the configuration table) are:\
\
{\
  ensure_dependencies   = true, -- Should packer install plugin dependencies?\
  snapshot = nil, -- Name of the snapshot you would like to load at startup\
  snapshot_path = join_paths(stdpath 'cache', 'packer.nvim'), -- Default save directory for snapshots\
  package_root   = util.join_paths(vim.fn.stdpath('data'), 'site', 'pack'),\
  compile_path = util.join_paths(vim.fn.stdpath('config'), 'plugin', 'packer_compiled.lua'),\
  plugin_package = 'packer', -- The default package for plugins\
  max_jobs = nil, -- Limit the number of simultaneous jobs. nil means no limit\
  auto_clean = true, -- During sync(), remove unused plugins\
  compile_on_sync = true, -- During sync(), run packer.compile()\
  disable_commands = false, -- Disable creating commands\
  opt_default = false, -- Default to using opt (as opposed to start) plugins\
  transitive_opt = true, -- Make dependencies of opt plugins also opt by default\
  transitive_disable = true, -- Automatically disable dependencies of disabled plugins\
  auto_reload_compiled = true, -- Automatically reload the compiled file after creating it.\
  preview_updates = false, -- If true, always preview updates before choosing which plugins to update, same as `PackerUpdate --preview`.\
  git = {\
    cmd = 'git', -- The base command for git operations\
    subcommands = { -- Format strings for git subcommands\
      update         = 'pull --ff-only --progress --rebase=false',\
      install        = 'clone --depth %i --no-single-branch --progress',\
      fetch          = 'fetch --depth 999999 --progress',\
      checkout       = 'checkout %s --',\
      update_branch  = 'merge --ff-only @{u}',\
      current_branch = 'branch --show-current',\
      diff           = 'log --color=never --pretty=format:FMT --no-show-signature HEAD@{1}...HEAD',\
      diff_fmt       = '%%h %%s (%%cr)',\
      get_rev        = 'rev-parse --short HEAD',\
      get_msg        = 'log --color=never --pretty=format:FMT --no-show-signature HEAD -n 1',\
      submodules     = 'submodule update --init --recursive --progress'\
    },\
    depth = 1, -- Git clone depth\
    clone_timeout = 60, -- Timeout, in seconds, for git clones\
    default_url_format = 'https://github.com/%s' -- Lua format string used for "aaa/bbb" style plugins\
  },\
  display = {\
    non_interactive = false, -- If true, disable display windows for all operations\
    compact = false, -- If true, fold updates results by default\
    open_fn  = nil, -- An optional function to open a window for packer's display\
    open_cmd = '65vnew \\[packer\\]', -- An optional command to open a window for packer's display\
    working_sym = '‚Éø≥', -- The symbol for a plugin being installed/updated\
    error_sym = '‚ÉºÉ∑', -- The symbol for a plugin with an error in installation/updating\
    done_sym = '‚ÉºÉ≥', -- The symbol for a plugin which has completed installation/updating\
    removed_sym = '-', -- The symbol for an unused plugin which was removed\
    moved_sym = '‚É¶É≤', -- The symbol for a plugin which was moved (e.g. from opt to start)\
    header_sym = '‚É¥Å', -- The symbol for the header line in packer's display\
    show_all_info = true, -- Should packer show all update details automatically?\
    prompt_border = 'double', -- Border style of prompt popups.\
    keybindings = { -- Keybindings for the display window\
      quit = 'q',\
      toggle_update = 'u', -- only in preview\
      continue = 'c', -- only in preview\
      toggle_info = '<CR>',\
      diff = 'd',\
      prompt_revert = 'r',\
    }\
  },\
  luarocks = {\
    python_cmd = 'python' -- Set the python command to use for running hererocks\
  },\
  log = { level = 'warn' }, -- The default print log level. One of: "trace", "debug", "info", "warn", "error", "fatal".\
  profile = {\
    enable = false,\
    threshold = 1, -- integer in milliseconds, plugins which load faster than this won't be shown in profile output\
  },\
  autoremove = false, -- Remove disabled or unused plugins without prompting the user\
}\
Specifying plugins\
\
packer is based around declarative specification of plugins. You can declare a plugin using the function packer.use, which I highly recommend locally binding to use for conciseness.\
\
use takes either a string or a table. If a string is provided, it is treated as a plugin location for a non-optional plugin with no additional configuration. Plugin locations may be specified as\
\
Absolute paths to a local plugin\
Full URLs (treated as plugins managed with git)\
username/repo paths (treated as Github git plugins)\
A table given to use can take two forms:\
\
A list of plugin specifications (strings or tables)\
A table specifying a single plugin. It must have a plugin location string as its first element, and may additionally have a number of optional keyword elements, shown below:\
use {\
  'myusername/example',        -- The plugin location string\
  -- The following keys are all optional\
  disable = boolean,           -- Mark a plugin as inactive\
  as = string,                 -- Specifies an alias under which to install the plugin\
  installer = function,        -- Specifies custom installer. See "custom installers" below.\
  updater = function,          -- Specifies custom updater. See "custom installers" below.\
  after = string or list,      -- Specifies plugins to load before this plugin. See "sequencing" below\
  rtp = string,                -- Specifies a subdirectory of the plugin to add to runtimepath.\
  opt = boolean,               -- Manually marks a plugin as optional.\
  bufread = boolean,           -- Manually specifying if a plugin needs BufRead after being loaded\
  branch = string,             -- Specifies a git branch to use\
  tag = string,                -- Specifies a git tag to use. Supports '*' for "latest tag"\
  commit = string,             -- Specifies a git commit to use\
  lock = boolean,              -- Skip updating this plugin in updates/syncs. Still cleans.\
  run = string, function, or table, -- Post-update/install hook. See "update/install hooks".\
  requires = string or list,   -- Specifies plugin dependencies. See "dependencies".\
  rocks = string or list,      -- Specifies Luarocks dependencies for the plugin\
  config = string or function, -- Specifies code to run after this plugin is loaded.\
  -- The setup key implies opt = true\
  setup = string or function,  -- Specifies code to run before this plugin is loaded. The code is ran even if\
                               -- the plugin is waiting for other conditions (ft, cond...) to be met.\
  -- The following keys all imply lazy-loading and imply opt = true\
  cmd = string or list,        -- Specifies commands which load this plugin. Can be an autocmd pattern.\
  ft = string or list,         -- Specifies filetypes which load this plugin.\
  keys = string or list,       -- Specifies maps which load this plugin. See "Keybindings".\
  event = string or list,      -- Specifies autocommand events which load this plugin.\
  fn = string or list          -- Specifies functions which load this plugin.\
  cond = string, function, or list of strings/functions,   -- Specifies a conditional test to load this plugin\
  module = string or list      -- Specifies Lua module names for require. When requiring a string which starts\
                               -- with one of these module names, the plugin will be loaded.\
  module_pattern = string/list -- Specifies Lua pattern of Lua module names for require. When\
                               -- requiring a string which matches one of these patterns, the plugin will be loaded.\
}\
For the cmd option, the command may be a full command, or an autocommand pattern. If the command contains any non-alphanumeric characters, it is assumed to be a pattern, and instead of creating a stub command, it creates a CmdUndefined autocmd to load the plugin when a command that matches the pattern is invoked.\
\
Checking plugin statuses\
\
You can check whether or not a particular plugin is installed with packer as well as if that plugin is loaded. To do this you can check for the plugin's name in the packer_plugins global table. Plugins in this table are saved using only the last section of their names e.g. tpope/vim-fugitive if installed will be under the key vim-fugitive.\
\
if packer_plugins["vim-fugitive"] and packer_plugins["vim-fugitive"].loaded then\
print("Vim fugitive is loaded")\
-- other custom logic\
end\
NOTE: this table is only available after packer_compiled.vim is loaded so cannot be used till after plugins have been loaded.\
\
Luarocks support\
\
You may specify that a plugin requires one or more Luarocks packages using the rocks key. This key takes either a string specifying the name of a package (e.g. rocks=lpeg), or a list specifying one or more packages. Entries in the list may either be strings, a list of strings or a table --- the latter case is used to specify arguments such as the particular version of a package. all supported luarocks keys are allowed except: tree and local. Environment variables for the luarocks command can also be specified using the env key which takes a table as the value as shown below.\
\
rocks = {'lpeg', {'lua-cjson', version = '2.1.0'}}\
use_rocks {'lua-cjson', 'lua-resty-http'}\
use_rocks {'luaformatter', server = 'https://luarocks.org/dev'}\
use_rocks {'openssl' env = {OPENSSL_DIR = "/path/to/dir"}}\
Currently, packer only supports equality constraints on package versions.\
\
packer also provides the function packer.luarocks.install_commands(), which creates the PackerRocks <cmd> <packages...> command. <cmd> must be one of "install" or "remove"; <packages...> is one or more package names (currently, version restrictions are not supported with this command). Running PackerRocks will install or remove the given packages. You can use this command even if you don't use packer to manage your plugins. However, please note that (1) packages installed through PackerRocks will be removed by calls to packer.luarocks.clean() (unless they are also part of a packer plugin specification), and (2) you will need to manually invoke packer.luarocks.setup_paths (or otherwise modify your package.path) to ensure that Neovim can find the installed packages.\
\
Finally, packer provides the function packer.use_rocks, which takes a string or table specifying one or more Luarocks packages as in the rocks key. You can use this to ensure that packer downloads and manages some rocks which you want to use, but which are not associated with any particular plugin.\
\
Custom installers\
\
You may specify a custom installer & updater for a plugin using the installer and updater keys. Note that either both or none of these keys are required. These keys should be functions which take as an argument a display object (from lua/packer/display.lua) and return an async function (per lua/packer/async.lua) which (respectively) installs/updates the given plugin.\
\
Providing the installer/updater keys overrides plugin type detection, but you still need to provide a location string for the name of the plugin.\
\
Update/install hooks\
\
You may specify operations to be run after successful installs/updates of a plugin with the run key. This key may either be a Lua function, which will be called with the plugin table for this plugin (containing the information passed to use as well as output from the installation/update commands, the installation path of the plugin, etc.), a string, or a table of functions and strings.\
\
If an element of run is a string, then either:\
\
If the first character of run is ":", it is treated as a Neovim command and executed.\
Otherwise, run is treated as a shell command and run in the installation directory of the plugin via $SHELL -c '<run>'.\
Dependencies\
\
Plugins may specify dependencies via the requires key. This key can be a string or a list (table).\
\
If requires is a string, it is treated as specifying a single plugin. If a plugin with the name given in requires is already known in the managed set, nothing happens. Otherwise, the string is treated as a plugin location string and the corresponding plugin is added to the managed set.\
\
If requires is a list, it is treated as a list of plugin specifications following the format given above.\
\
If ensure_dependencies is true, the plugins specified in requires will be installed.\
\
Plugins specified in requires are removed when no active plugins require them.\
\
Sequencing\
\
You may specify a loading order for plugins using the after key. This key can be a string or a list (table).\
\
If after is a string, it must be the name of another plugin managed by packer (e.g. the final segment of a plugin's path - for a Github plugin FooBar/Baz, the name would be just Baz). If after is a table, it must be a list of plugin names. If a plugin has an alias (i.e. uses the as key), this alias is its name.\
\
The set of plugins specified in a plugin's after key must all be loaded before the plugin using after will be loaded. For example, in the specification\
\
  use {'FooBar/Baz', ft = 'bax'}\
  use {'Something/Else', after = 'Baz'}\
the plugin Else will only be loaded after the plugin Baz, which itself is only loaded for files with bax filetype.\
\
Keybindings\
\
Plugins may be lazy-loaded on the use of keybindings/maps. Individual keybindings are specified either as a string (in which case they are treated as normal mode maps) or a table in the format {mode, map}.\
\
Performing plugin management operations\
\
packer exposes the following functions for common plugin management operations. In all of the below, plugins is an optional table of plugin names; if not provided, the default is "all managed plugins":\
\
packer.install(plugins): Install the specified plugins if they are not already installed\
packer.update(plugins): Update the specified plugins, installing any that are missing\
packer.update(opts, plugins): First argument can be a table specifying options, such as {preview_updates = true} to preview potential changes before updating (same as PackerUpdate --preview).\
packer.clean(): Remove any disabled or no longer managed plugins\
packer.sync(plugins): Perform a clean followed by an update.\
packer.sync(opts, plugins): Can take same optional options as update.\
packer.compile(path): Compile lazy-loader code and save to path.\
packer.snapshot(snapshot_name, ...): Creates a snapshot file that will live under config.snapshot_path/<snapshot_name>. If snapshot_name is an absolute path, then that will be the location where the snapshot will be taken. Optionally, a list of plugins name can be provided to selectively choose the plugins to snapshot.\
packer.rollback(snapshot_name, ...): Rollback plugins status a snapshot file that will live under config.snapshot_path/<snapshot_name>. If snapshot_name is an absolute path, then that will be the location where the snapshot will be taken. Optionally, a list of plugins name can be provided to selectively choose which plugins to revert.\
packer.delete(snapshot_name): Deletes a snapshot file under config.snapshot_path/<snapshot_name>. If snapshot_name is an absolute path, then that will be the location where the snapshot will be deleted.\
Extending packer\
\
You can add custom key handlers to packer by calling packer.set_handler(name, func) where name is the key you wish to handle and func is a function with the signature func(plugins, plugin, value) where plugins is the global table of managed plugins, plugin is the table for a specific plugin, and value is the value associated with key name in plugin.\
\
Compiling Lazy-Loaders\
\
To optimize startup time, packer.nvim compiles code to perform the lazy-loading operations you specify. This means that you do not need to load packer.nvim unless you want to perform some plugin management operations.\
\
To generate the compiled code, call packer.compile(path), where path is some file path on your runtimepath, with a .vim extension. This will generate a blend of Lua and Vimscript to load and configure all your lazy-loaded plugins (e.g. generating commands, autocommands, etc.) and save it to path. Then, when you start vim, the file at path is loaded (because path must be on your runtimepath), and lazy-loading works.\
\
If path is not provided to packer.compile, the output file will default to the value of config.compile_path.\
\
The option compile_on_sync, which defaults to true, will run packer.compile() during packer.sync(), if set to true. Note that otherwise, you must run packer.compile yourself to generate the lazy-loader file!\
\
NOTE: If you use a function value for config or setup keys in any plugin specifications, it must not have any upvalues (i.e. captures). We currently use Lua's string.dump to compile config/setup functions to bytecode, which has this limitation. Additionally, if functions are given for these keys, the functions will be passed the plugin name and information table as arguments.\
\
User autocommands\
\
packer runs most of its operations asyncronously. If you would like to implement automations that require knowing when the operations are complete, you can use the following User autocmds (see :help User for more info on how to use):\
\
PackerComplete: Fires after install, update, clean, and sync asynchronous operations finish.\
PackerCompileDone: Fires after compiling (see the section on compilation)\
Using a floating window\
\
You can configure Packer to use a floating window for command outputs by passing a utility function to packer's config:\
\
packer.startup({function()\
  -- Your plugins here\
end,\
config = {\
  display = {\
    open_fn = require('packer.util').float,\
  }\
}})\
By default, this floating window will show doubled borders. If you want to customize the window appearance, you can pass a configuration to float, which is the same configuration that would be passed to nvim_open_win:\
\
packer.startup({function()\
  -- Your plugins here\
end,\
config = {\
  display = {\
    open_fn = function()\
      return require('packer.util').float({ border = 'single' })\
    end\
  }\
}})\
Profiling\
\
Packer has built in functionality that can allow you to profile the time taken loading your plugins. In order to use this functionality you must either enable profiling in your config, or pass in an argument when running packer compile.\
\
Setup via config\
\
config = {\
  profile = {\
    enable = true,\
    threshold = 1 -- the amount in ms that a plugin's load time must be over for it to be included in the profile\
  }\
}\
Using the packer compile command\
\
:PackerCompile profile=true\
" or\
:PackerCompile profile=false\
Profiling usage\
\
This will rebuild your packer_compiled.vim with profiling code included. In order to visualise the output of the profile restart your neovim and run PackerProfile. This will open a window with the output of your profiling.\
\
Debugging\
\
packer.nvim logs to stdpath(cache)/packer.nvim.log. Looking at this file is usually a good start if something isn't working as expected.\
\
Compatibility and known issues\
\
2021-07-31: If you're on macOS, note that building Neovim with the version of luv from homebrew will cause any packer command to crash. More about this issue at neovim/neovim#15054.\
2021-07-28: packer will now highlight commits/plugin names with potentially breaking changes (determined by looking for breaking change or breaking_change, case insensitive, in the update commit bodies and headers) as WarningMsg in the status window.\
2021-06-06: Your Neovim must include neovim/neovim#14659; packer uses the noautocmd key.\
2021-04-19: packer now provides built-in profiling for your config via the packer_compiled file. Take a look at the docs for more information!\
2021-02-18: Having trouble with Luarocks on macOS? See this issue.\
2021-01-19: Basic Luarocks support has landed! Use the rocks key with a string or table to specify packages to install.\
2020-12-10: The disable_commands configuration flag now affects non-startup use as well. This means that, by default, packer will create commands for basic operations for you.\
2020-11-13: There is now a default implementation for a floating window open_fn in packer.util.\
2020-09-04: Due to changes to the Neovim extmark api (see: https://github.com/neovim/neovim/commit/3853276d9cacc99a2698117e904475dbf7033383), users will need to update to a version of Neovim after the aforementioned PR was merged. There are currently shims around the changed functions which should maintain support for earlier versions of Neovim, but these are intended to be temporary and will be removed by 2020-10-04. Therefore Packer will not work with Neovim v0.4.4, which was released before the extmark change.\
Contributors\
\
Many thanks to those who have contributed to the project! PRs and issues are always welcome. This list is infrequently updated; please feel free to bug me if you're not listed here and you would like to be.\
\
@akinsho\
@nanotee\
@weilbith\
@Iron-E\
@tjdevries\
@numToStr\
@fsouza\
@gbrlsnchs\
@lewis6991\
@TimUntersberger\
@bfredl\
@sunjon\
@gwerbin\
@shadmansaleh\
@ur4ltz\
@EdenEast\
@khuedoan\
@kevinhwang91\
@runiq\
@n3wborn\
@deathlyfrantic\
@doctoromer\
@elianiva\
@dundargoc\
@jdelkins\
@dsully\

nvim --headless -c 'autocmd User PackerComplete quitall' -c 'PackerSync'\

ls
cd ..
cd ..
ls
cat init.lua
ls
cd lua
ls
cd core
nvim plugin_config
nvim plugin_config.lua
cd ../..
nvim init.lua
nvim
cat lua/core/plugin_config.lua
nvim
nvim
ssh nmccloskey@192.168.1.142
ssh nmccloskey@192.168.1.146
ssh ubuntu@192.168.1.146
iwgetid -r
ssh ubuntu@192.168.1.146
ssh ubuntu@192.168.1.146
ssh ubuntu@192.168.1.147
ssh nmccloskey@192.168.1.147
j
ssh nmccloskey@wrongserver
ip address
ping 192.168.1.255
arp-scan
nmap -sn
ssh nmccloskey@wrongServer
ssh nmccloskey@192.168.1.114
ssh nmccloskey@192.168.1.147
cd /Users/nmcclosekey/.ssh
cd /Users/nmccloskey
cd .ssh
ls
cat known_hosts
nvim known_hosts
ssh nmccloskey@192.168.1.147
ssh nmccloskey@192.168.1.147
history
kextstat | grep Keyboard
ddev robo local:update ed.local
ddev robo local:update ed.local
ddev robo local:update ed.local
which nvim
which nvim\\

/opt/homebrew/bin/nvim'/Users/nmccloskey/Documents/Bio-McCloskey.txt' 
/opt/homebrew/bin/nvim '/Users/nmccloskey/Documents/Bio-McCloskey.txt' 
/opt/homebrew/bin/nvim '/Users/nmccloskey/Documents/Bio-McCloskey.txt' 
ddev robo local:update ed.local
ddev robo local:update ed.local
ddev robo local:update ed.local
ddev robo local:update
ddev robo local:update
ls
cd .config
cd nvim
ls
cd lua
ls
cd core
ls
cat plugins.lua
brew tap homebrew/cask-fonts
brew intsll font-hack-nerd-font
brew install font-hack-nerd-font
nvim
cd .config
nvim 
sh <(curl -L https://nixos.org/nix/install)
cd .config/nvim
cd ..
cd nvim
git init
git add *
git add
ls
git add .
git commit
git commit
git remote add origin git@github.com:Rudamentary99/dotfiles.git
git push -u origin master
git branch -M main\
git remote add origin git@github.com:Rudamentary99/dotfiles.git\
git push -u origin main
git branch -M main
git push -u origin main
git remote add origin git@github.com:Rudamentary99/dotfiles.git\
git branch -M main\
git push -u origin main
ls
cd .git
ls
ls -al ~/.ssh
ssh-keygen -t ed25519 -C "nathan.mccloskey@icloud.com"
eval "$(ssh-agent -s)"
Agent pid 40634
sudo -s -H Agent pid 40634
exec ssh-agent bash
cd .ssh
ls
pbcopy < ~/.ssh/id_ed25519.pub
cd ~/.config/nvim
git remote add origin git@github.com:Rudamentary99/nvim-config.git\
git branch -M main\
git push -u origin main
ls
cd .git
ls
cat hooks
cat HEAD
cat config
nvim config
git branch -M main
git push -u origin main
ls ~/.ssh
ls ~/.ssh/con
ls ~/.ssh/config
cat ~/.ssh/config
nvim ~/.ssh/config
git push -u origin main
nvim ~/.bash_profile
 thest
nvim ~.zshrc
nvim ~/.zshrc
cd Documents
ls
cd GitHub
nvim ~/.bash_profile
nvim .bash_profile
echo "source ~/.bash_profile" >> ~/.zshrc
nvim ~/.prophile
nvim ~/.profile
nvim ~/.profile
rm .profile
ls
nvim .zhrc
nvim .zshrc
nvim .zshrc
nvim .zshrc
nvim .zshrc
nvim .zshrc
nix-shell -p oh-my-zsh
history
nvim .zshrc
nvim .zshrc
nix-env -iA nixpkgs.oh-my-zsh
which oh-my-zsh
nix-env -q
cp -v $(nix-env -q ‚ÄÉ≥out-path oh-my-zsh | cut -d‚ÄÉπ ‚ÄÉπ -f3)/share/oh-my-zsh/templates/zshrc.zsh-template ~/.zshrc
nix-env -q -out-path oh-my-zsh
cat -v $(nix-env -q ‚ÄÉ≥out-path oh-my-zsh | cut -d‚ÄÉπ ‚ÄÉπ -f3)/share/oh-my-zsh/templates/zshrc.zsh-template
cat $(nix-env -q ‚ÄÉ≥out-path oh-my-zsh | cut -d‚ÄÉπ ‚ÄÉπ -f3)/share/oh-my-zsh/templates/zshrc.zsh-template
nix-env -q oh-my-zsh
nix-env -q oh-my-zsh | cut -d' ' -f3
$(nix-env -q oh-my-zsh | cut -d' ' -f3)/share/oh-my-zsh/templates/zshrc.zsh-template
$(nix-env -q oh-my-zsh | cut -d' ' -f3)/share/oh-my-zsh/templates/zshrc.zsh-template
which oh-my-zsh-2023-02-025
which oh-my-zsh-2023-02-05
nix-env -qaP
ls
 nix-env -qaP
nix-env -q
nix-env -h
nix-env --help
cd nix
cd /nix
ls
cd store
ls
ls | grep oh-my
nix-env -q -out-path oh-my-zsh
nix-env -q --out-path oh-my-zsh
nix-env -q -out-path oh-my-zshfc $!
fc $!
fc
fc $!
cp -v $(nix-env -q ‚ÄÉ≥out-path oh-my-zsh | cut -d‚ÄÉπ ‚ÄÉπ -f3)/share/oh-my-zsh/templates/zshrc.zsh-template ~/.zshrc
fc
cp -v $(nix-env -q -‚ÄÉ≥out-path oh-my-zsh | cut -d‚ÄÉπ ‚ÄÉπ -f3)/share/oh-my-zsh/templates/zshrc.zsh-template ~/.zshrc
cp -v $(nix-env -q -‚ÄÉ≥out-path oh-my-zsh | cut -d‚ÄÉπ ‚ÄÉπ -f3)/share/oh-my-zsh/templates/zshrc.zsh-template ~/.zshrc
fc
cat ~/.zshrc
history
/nix/store/zj9hs5grlq6yn522rzj3dp984wrqbpdd-oh-my-zsh
cp -v /nix/store/zj9hs5grlq6yn522rzj3dp984wrqbpdd-oh-my-zsh-2023-02-05/share/oh-my-zsh/templates/zshrc.zsh-template ~/.zshrc
cat ~/.zshrc
nvim .zshrc
nix-env -iA nixpkgs.zsh-autosuggestions
nix-env -1
nix-env-q
nix-env -q
ls
nix-env -q
cat nix-env -1
cat nix-env -q
nix-env -q zsh-au
nix-env -q zsh-autosuggestions
which zsh-autosuggestions
ls
history | grep nix-env
nix-env -q --out-path oh-my-zsh
nix-env -q --out-path 
echo nix-env -q --out-path 
echo $(nix-env -q --out-path)
echo $(nix-env -q --out-path | cut -d' ' -f3)
ls $(nix-env -q --out-path | cut -d' ' -f3)
fc
cd /nix
ls
cd store
ls
cd $(nix-env -q --out-path | cut -d' ' -f3)
ls
ls share
cd share/zsh-autosuggestions
ls
cat zsh-autosuggestions.zsh
nvim .zshrc
ls
nix-env e zsh-autosuggestion
nix-env -e zsh-autosuggestion
nix-env -e zsh-autosuggestions
cd ~
echo $(nix-env -q)
git clone https://github.com/zsh-users/zsh-autosuggestions ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions
cd ~
git clone https://github.com/zsh-users/zsh-autosuggestions ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions
sudo git clone https://github.com/zsh-users/zsh-autosuggestions ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions
z edgov
z home
z github
z 
quit
exit
ls
nvim .zshrc
alias
HOme
-
l
alias
la
alias
ll
la
l
ll
ls
lsa
cd .config
ls
cd nvim
nvim 
ls
cd Documents
cd GitHub
ls
cd ed-gov
nvim
z ed-gov
ls
nvim
brew services
history | grep brew
brew services list
brew services stop yabai
brew services stop skhd
z ~
z ed-gov
cd tests
brew services start yokai
history | grep brew
brew service start yabai
brew services start yabai
ls
brew services start skhd
z nvim
ls
nvim 
z nvim
nvim
z ed-gov
cd tests
nvim
z /Users/nmccloskey/Documents/GitHub/ed-gov
cd te
ct tests
cd tests
nvim
z /Users/nmccloskey/Documents/GitHub/ed-gov/tests
ls
nvim cypress.config.js
z /Users/nmccloskey/.config/nvim
ls
nvi
nvim
z /Users/nmccloskey/Documents/GitHub/ed-gov/tests
nvim cypress.config.js
z /Users/nmccloskey/Documents/GitHub/ed-gov/tests
nvim cypress.config.js
nvim
nvim lua/core/plugins.lua
z /Users/nmccloskey/Documents/GitHub/ed-gov/tests
nvim cypress.config.js
nvim
history
ls
nvim www.ed.gov_2022-12-15_11-38-01.report.html
history
nvim www.ed.gov_2022-12-15_11-38-01.report.html
cd .config
ls
history | grep sk
cd ..
cat .skhdrc
nvim .skhdrc
z test
nvim cypress.config.js
brew services stop yobai skhd
brew services stop yokai
brew services
brew services stop yabai
brew services stop skhd
brew services start yabai
brew services start skhd
nvim 
nvim
z nvim
ls
z nvim
nvim
ls
z config
nvim
z /Users/nmccloskey/.config/nvim
git stage *
git commit 
git push
git pull
ddev start
cd tests
npx cypress open
z ed-gov
git fetch && git pull
cd ed-gov
ddev robo local:update ed.local
ddev robo local:update 
ddev robo local:update ed.local
history | grep rm
ls
cd web/themes/
ls
cd custom/edgov
ls
rm -r assets
ddev robo local:update ed.local
z /Users/nmccloskey/Documents/GitHub/ed-gov
ddev robo local:update ed.local
cd .config
ls
history | grep zsh
cd ..
nvim .zshrc
ddev robo local:update ed.local
ddev robo local:update
git clone https://github.com/zsh-users/zsh-autosuggestions ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions
nix-env -1
nix-env -q
rm -r web/themes/custom/edgov/assets
ddev robo local:update
nvim .zshrc
cd .config/nvim
nvim
ls
cd lua
ls
cd core
ls
nvim keymaps.lua
nvim
nvim keymaps.lua
ls
nvim plugins.lua
nvim plugin
ls
nvim keymaps.lua
nvim plugins.lua
nvim keymaps.lua
nvim plugins.lua
z /Users/nmccloskey/Documents/GitHub/ed-gov
cd web/themes/custom/edgov/components/02-element
nvim
ddev robo local:update
ddev robo local:update ed.local
z /Users/nmccloskey/.config/nvim
ls
nvim
z /Users/nmccloskey/Documents/GitHub/ed-gov
z /Users/nmccloskey/Documents/GitHub/ed-gov/tests
nvim cypress.config.js
nvim
nvin
nvim
ls
nvim lua/core/keymaps.lua
nvim
ls
exit
cd $ZSH_CUSTOM:-~/.oh-my-zsh/custom}
cd ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}
ls
cd plugins
ls
cd zsh-autosuggestions
ls
nvim ~/.zshrc
hitory
history
cd $ZSH_CUSTOM:-~/.oh-my-zsh/customls
cd $ZSH_CUSTOM:-~/.oh-my-zsh/custom
cd ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}
ls
pwd
cd plugins
ls
$PATH
nvim ~/.config/nvim/lua/core/keymaps.lua
cd ~/.config/nivm
cd ~/.config/nvim
nvim
z /Users/nmccloskey/.config/nvim
nvim
nvim ~/.config/nvim/lua/core/keymaps.lua
nvim
z /Users/nmccloskey/Documents/GitHub/ed-gov
nvim
nvim ~/.config/nvim/lua/core/keymaps.lua
nvim ~/.config/nvim/lua/core/plugin_config.lua
z nvim
ls
git changes
git --help
git status
git stage *
git commit added basic keymaps for stuff
git commit --help
git comit -c 'added basic keymaps to stuff\
'
git commit -c 'added basic keymaps to stuff\
'
git commit
git status
git push
nvim
nvim ~/.config/nvim/lua/core/plugin_config.lua
exti
exit
z /Users/nmccloskey/Documents/GitHub/ed-gov
ddev drush @ed.local cim -y && ddev drush @ed.local it -y
ddev robo local:update ed.local
ddev robo local:update 
rm -r web/themes/custom/edgov/assets
ddev robo local:update 
brew tap drud/ddef && brew install drud/ddev/ddev
brew tap drud/ddev && brew install drud/ddev/ddev
z /Users/nmccloskey/Documents/GitHub
ls
mkdir d9test
cd d9test
ddev config --project-type=drupal9 --docroot=web --create-docroot
cd ~/Library/ApplicationSupport/iTerm2/Scripts/AutoLaunch
ls
cd .config
ls
cd .config
ls
cd iterm2
ls
cd ~/Library/ApplicationSupport
ls
ddev start
nvim auto_dark_mode.py
z /nix/store/zj9hs5grlq6yn522rzj3dp984wrqbpdd-oh-my-zsh-2023-02-0
/opt/homebrew/bin/nvim '/Users/nmccloskey/Library/Application Support/iTerm2/Scripts/auto_dark_mode.py' 
ls
cd web
ls
cd sites
ls
cd default
ls
lls
cd ../..
..
ls
ls -A
ca .ddev
cat .ddev
ls .ddev
ls
nvim
ddev stop
ddev start
ddev composer create "drupal/recommended-project:^9"
cd ..
ls
rm -r d9test
ls
mkdir d9test
cd d9test
ddev config --project-type=drupal9 --docroot=web --create-docroot
ddev start
ddev composer create "drupal/recommended-project:^9"
ddev composer require drush/drush
ddev drush site:install --account-name=admin --account-pass=admin -y
ddev drush uli
ddev launch
z ed-gov
ddev robo local:update 
nvim .zshrc
z
z ed-gov
ddev robo local:update 
/opt/homebrew/bin/nvim '/Users/nmccloskey/Downloads/ED-435_attachments/Keyword.csv' 
z /Users/nmccloskey/Dowloads
ls
cd Downloads/\\
ls
cd Downloads
ls
cd ED-435_attachments
ls
nvim
nvim audience.csv
nvim .zshrc
nvim .skhdrc
z /Users/nmccloskey/Documents/GitHub/ed-gov
ddev robo local:update 
nvim ~/.zshrc
/opt/homebrew/bin/nvim '/Users/nmccloskey/Library/Application Support/iTerm2/Scripts/auto_dark_mode.py' 
z /Users/nmccloskey/Documents/GitHub/ed-gov
git pull
git diff origin/master
git fetch origin
git diff 
git diff origin/master
git merge origin/master
ddev robo local:update 
z /Users/nmccloskey/Documents/GitHub/ed-gov
ddev drush @ed.local cim -y && ddev drush @ed.local it -y
ddev robo local:update 
echo -e "$(cat '/Applications/Warp.app/Contents/Resources/assets/onboarding/welcome_to_warp.txt')"
ls
nvim ~/.zshrc
/Applications/Sideloadly.app/Contents/Resources/sideloadly-daemon ; exit;
nvim
test
z ed-gov
ls
nvim tests/cypress.config.js
nvi
nvim ~/.config/karabiner/karabiner.json 
z Applications/
ls
cd ~
ls
cd Applications/
ls
.config
ls
cd karabiner
nvim karabiner.json
nvim
restart
reboot
/Applications/Sideloadly.app/Contents/Resources/sideloadly-daemon ; exit;
history
nvim karabiner.json
z karabiner
nvim karabiner.json
z Machintosh HD
z 'Machintosh HD'
ls
cd ..
ls
cd Applications/
codedesign -dr Warp.app
codesign -dr Warp.app
codesign -dr "Warp.app"
codesign -dr - "Warp.app"
codesign -dr - iTerm.app
ls
cd assets
ls
cd complex_modifications
ls
nvim 1676476534.json
z /Users/nmccloskey/.config/karabiner
ls
nvim karabiner.json
cd Applications/
ls
Microsoft\ Teams.app/
ls
cd Contents/
ls
cat Info.plist 
cd ~
nvim .zshrc
ls
nvim .zshrc
cd ~
cd .config
ls
cd nvim/lua/core
ls
nvim keymaps.lua
ls .ddev
nvim .zshrc
/opt/homebrew/bin/nvim '/Users/nmccloskey/Library/Application Support/iTerm2/Scripts/AutoLaunch/auto_dark_mode.py' 
history
ncim .config/nvim/lua/core/plugins.lua
nv\im .config/nvim/lua/core/plugins.lua
cat .skhdrc
nv\im .config/nvim/lua/core/plugins.lua
z /Users/nmccloskey/Documents/GitHub/ed-gov
ddev robo local:update 
z /Users/nmccloskey/Documents/GitHub/ed-gov
ddev start
cat .skhdrc
cat .skhdrc | grep l
cat .skhdrc | grep ' l\
'
cat .skhdrc | grep ' l'\
'\
cat .skhdrc | grep ' l'\
'
nvim .zshrc
nvim .skhdrc
brew install qmk/qmk/qmk
python -v
python3 -v
c nvim
z nvim
ls
nvim lua/core/keymaps.lua
git diff
git stage
git stage *
git commit
git push
git diff
npm i -g pyright
sudo npm i -g pyright
nvim lua/core/keymaps.lua
nvim main.py
nvim lua/core/keymaps.lua
nvim lua/core/plugin_config.lua
z nvim
cd nvim/lua/core
cd lua/core
ls
nvim lua/core/plugin_config.lua
nvim main.py
z nvim
ls
brew install lua-language-server
nvim lua/core/plugin_config.lua
exit
history | grep ddev
history | grep omit\\

ddev stop 
z ed-gov
ddev stop
z ed-gov
ddev delete ed --omit-snapshot
ddev start
ddev robo project:init ed.local ed
ddev drush @ed.local generate-content 
ddev drush @ed.local genc
ddev drush @ed.local gen entity:content
z ed-gov
z eL
z ed-gov
ddev robo update:local ed.local
ddev robo local:update ed.local
z ed-gov
ddev robo local:update ed.local
cat .skhdrc
z ed-gov
ddev robo local:update ed.local
ls
z ed-gov
ddev stop
ddev start
z ed-gov]
z ed-gov
ls
ddev restart
ddev robo local:update ed.local
z
z L
z ed-gov
ddev robo local:update ed.local
ddev restart
ip address
ipconfig
ifconfig
z ed-gov
ddev robo local:update ed.local
z ed-gov
ddev robo local:update ed.local
ddev stop
ddev delete ed --omit-snapshot
ddev start
ddev robo project:init ed.local ed
z ed-gov
git pull
ddev robo update:local ed.local
ddev robo local:update ed.local
cat .skhdrc
ip
ifconfig
ifconfig | grep 192.
z github
ls
cd d9test
ddev start
ddev launch
composer require 'drupal/admin_toolbar:^3.3'
ddev composer require 'drupal/admin_toolbar:^3.3'
z Downloads
ls
scp
scp Manjaro-ARM-kde-plasma-generic-23.02.img.xz nmccloskey@192.168.1.145:"~/Downloads/"
history | grep php
ddev drush @ed.logal php:script test.php
ddev drush @ed.local php:script test.php
z ed
ls
z ed
nvim test.php
ls
nvim test.php
ddev drush @ed.local php:script test.php
ls
hiostory | grep zsh
history | grep zsh
cat .zsh
cat .zshrc
ssh nmccloskey@192.168.26.155
cat .zshrc
cd .config
ls
cat fish
ls
ls fish
cat fish/config.fish
ls github-copilot
mkdir ConFigurA$on
cd ConFigurA
mkdir zsh
mkdir nvim
cd ..
cp .zshrc .config/ConFigurA/zsh/.zshrc
cat .config/ConFigurA/zsh/.zshrc
ls
cd .conf
cd .config
ls
cd nvim
ls
man tee
nix-build https://github.com/LnL7/nix-darwin/archive/master.tar.gz -A installer\
./result/bin/darwin-installer
cd ~
cd ./result
nix-build -h
nix-build --h
nixe-env
nix-env
whihc nix-env
$ curl -L https://nixos.org/nix/install | sh
curl -L https://nixos.org/nix/install | sh
sudo reboot
nvim /etc/bashrc.backup-before-nix
exit
nix
nix-env
curl -L https://nixos.org/nix/install | sh
ls
mkdir backup
cp /etc/bashrc ./backup/pashrc
cp /etc/bashrc.backup-before-nix ./backup/bashrc.backup-before-nix
ls backup
mv /etc/bashrc.backup-before-nix /etc/bashrc
sudo mv /etc/bashrc.backup-before-nix /etc/bashrc
curl -L https://nixos.org/nix/install | sh
nix-shell -p oh-my-zsh
nvim /etc/zshrc
cp /etc/zshrc backup/zshrc
mv /etc/zshrc.backup-before-nix /etc/zshrc
sudo mv /etc/zshrc.backup-before-nix /etc/zshrc
curl -L https://nixos.org/nix/install | sh
exti
exit
nix-build https://github.com/LnL7/nix-darwin/archive/master.tar.gz -A installer\
./result/bin/darwin-installer
exit
cd ~/.nixpkgs
ls
cat darwin-configuration.nix
nvim darwin-configuration.nix
cd ~/.config
ls
cd ConFigurA
ls
mkdir nix-darwin
cd nix-darwin
nvim default.nix
cd .config/nvim
ls
nvim init.lua
nvim default.nix
z nvim
nvim lua/core/plugin_configs/lsp_config.lua
nvim default.nix
z nvim
nvim lua/core/plugin_configs/lsp_config.lua
nvim default.nix
z nvim
nvim lua/core/plugin_configs/lsp_config.lua
git stage *
git commit
git push
cd ~
nvim .zshrc
z nvim
git diff
git pull
git push
git status
git add .DS_Store
gig commit
git commit -c 'added .DS_store'
git commit
git push
exti
exit
z ed
git pull
ddev robo local:update ed.local
pip install numpy
pip install -U matplotlib
pip install -upgrade pip
pip install --upgrade pip
z github
ls
mkdir nnfs
cd nnfs
ls
touch main.py
nvim main.py
z nnfs
python3 main.py
python main.py
nvim main.py
nvim
nvim main.py
z nvim
ls
nvim init.lua
brew install pyen
brew install 
brew install pyenv
python main.py
exit
python main.py
which python3
echo 'alias python=$(which python3)'
echo 'alias python=$[which python3]'
hstory | grep $
history | grep $
history | grep '$'
history | grep '['
history | grep '\$'
echo $(which python3)
echo 'la' + $(which python3)
echo 'la $(which python3)'
echo  alias python=$(which python3)
echo  alias python=$(which python3) >> ~/.zshrc
python main.py
python3 main.py
cat .zshrc
z nnfs
python3 main.py
python main.py
z ed
ddev robo local:update ed.local
z ed
ls
z files
cd web
cd sites
cd ed
ls
history | grep brew
brew services list
ddev describe
nvim .
nvim .zshrc
nvim .zsh_aliases
z ed
up1
cat .skhdrc
brew services list
brew service restart skhd
brew services restart skhd
z ed
up1
ddev start
brew services list
brew services restart yabai
z ed
up1
yobai -h
yabai -h
yabai
sudo yabai
yabai
brew services stop yabai
yabai
yabai --message
yabai -m
yabai --verbose
brew services list
yabai -m focus window north
cat .skhdrc
yabay -m window --focues east
yabai -m window --focus east
brew services stop skhd
skhd -V
brew services start skhd
brew services stop skhd
skhd -V
skhd
brew services start yabai
skhd
brew services start skhd
brew services upgrade skhd
brew update
brew upgrade
brew services list
brew service stop skhd
brew services stop yabai
brew services list
brew services stop skhd
brew servicest start yabai
brew services start yabai
brew services start skhd
brew servicest stop skhd
brew services stop skhd
skhd
z ed
up1
cim
z ed
git pull
ddev drush @ed.local cim -y
cat ~/.zshrc
cat ~/.zsh_aliases
ci1
des
sq
z ed
aq
sq
brew service stop yabai
brew services stop yabay
brew services stop yabai
brew services start yabai
z eld
z ed
ddev robo local:update ed.local
z ed
ddev robo local:update ed.local
ci1
z ed
history | grep ddev
ddev describe
z ed
ddev robo local:update ed.local
z exl
z ed
ddev robo local:update ed.local
z ed
ddev robo local:update ed.local
z ed
ddev robo local:update ed.local
z ed
ddev robo local:update ed.local
z ed
ddev robo local:update ed.local
z ed
up1
z ed
ddev start
z ed
up1
z ed
up1
z ed
ddev describe
ci1
ddev stop
sudo reboot
z ed
ddev start
z ed
up1
ddev robo local:update ed.local
ddev robo local:update
ddev stop 
ddev start
up1
ddev stop 
ddev delete ed --omit-snapshot
ddev start
ddev robo project:init ed.local ed
ddev
ddev robo project:init ed.local ed
composer install
ddev robo project:init ed.local ed
up1
z ed
cd Downloads
ls
ddev db-import ~/Downloads/ed_demo_03_21_2023.sql
ddev --help
ddev import-db ~/Downloads/ed_demo_03_21_2023.sql
ddev describe
z ed
up1
z ed
ddev start
brew services list
brew services restart yabai
brew services start skhd
brew services stop yabai
brew services stop skhd
z ed
ddev start
brew service start yabai
brew services start yabai
history | grep yabai
cd .config
ls
cd ..
ls
nvim .yabairc
brew services restart yabai
brew services list
brew services skhd
brew services list
brew services start skhd
ls | grep skhd
history | grep skhd
brew services stopr skhd
brew services stop skhd
skhd -V
brew services start skhd
brew servicest stop skhd
brew services stop skhd
ls ~/.config/skhd
mkdir /.config/skhd
mkdir .config/skhd
mv .skhdrc .config/skhd/.skhdrc
cat .skhdrc
cat .config/skhd/.skhdrc
skhd
brew services start skhd
brew services stop skhgd
brew services stop skhd
brew services restart yabai
skhd
brew service stop yabai
brew services stop yabai
skhd
skhd -c $HOME/.config/skhd/.skhdrc
brew services start yabai
skhd -c $HOME/.config/skhd/.skhdrc
brew services restart yabai
brew services list
brew service stop yabai
which skhd
brew services starrt yabai
brew services start yabai
brew services restart yabai
brew services list
nvim .yabairc
tail -f /opt/homebrew/var/log/yabai/yabai.err.log
ls
nvim .yabairc
brew service stop yabai
brew services stop yabai
skhd
yabai
brew services start yabai
brew services stop yabai
yabai
which yabai
/opt/homebrew/bin/yabai
brew services list
brew servicest start yabai
brew services start yabai
brew servicest stop yabai
brew servvices stop yabai\\

brew services stop yabai
reboot
sudo reboot
brew services list
yabai
brew services list
brew services start yabai
brew service start skhs
brew services start skhd
brew service stop yabai
brew services stop yabai
brew services stop skhd
which yabai
nvim .yabairc
yabai
which skhd
skhd -c $HOME/.config/skhd/.skhdrc
mv .config/skhd/.skhdrc .skhdrc
skhd
brew service start skhd
brew services start skhd
cp ~/Library/LaunchAgents/homebrew.mxcl.skhd.plist ~/.config/skhd/
sed -i '' 's/\/opt\/homebrew\/bin:/\/usr\/local\/bin:&/' ~/.config/skhd/homebrew.mxcl.skhd.plist
brew services start skhd
brew services stop skhd
brew service start skhd --file=~/.config/skhd/homebrew.mxcl.skhd.plist
brew services start skhd --file=~/.config/skhd/homebrew.mxcl.skhd.plist
brew services start skhd
cp ~/Library/LaunchAgents/homebrew.mxcl.skhd.plist ~/.config/skhd/
sed -i '' 's/\/opt\/homebrew\/bin:/\/usr\/local\/bin:&/' ~/.config/skhd/homebrew.mxcl.skhd.plist
brew services stop skhd
brew services start skhd
brew services stop skhd
brew services start skhd --file=~/.config/skhd/homebrew.mxcl.skhd.plist
brew services start skhd
brew service stop skhd
brew services stop skhd
cat .sk
cat .skhdrc
brew service start skhd -c $HOME/.skhdrc
brew services start skhd -c $HOME/.skhdrc
nvim .yabairc
which skhd
brew services restart yabai
skhd
brew service stop skhd
brew services stop yabai
z ed
ddev start
brew services start yabai
yabai --windows
yabai --window
yabai -m query --windows
nvim .yabairc
brew services restart yabai
yabai -m query --windows
brew services restart yabai
yabai -m query --windows
nvim .yabairc
skhd
which skhd
cd ~/Library/Startup.cmd
cd ~/Library
nvim Startup.cmd
which skhd
chmod +x Startup.cmd
ls
pwd\\

cd ~/Library
ls
mv Startup.cmd ~/Documents/Startup.cmd
ls
skhd &
brew uninstall skhd
brew services list
cat .skhdrc
brew install hekeishiya/formulae/skhd
brew services start skhd
brew servicest stop skhd
brew services stop skhd
brew services start skhd
brew servicest stop skhd
brew services stop skhd
brew uninstall skhd
brew install skhd
brew services start skhd
cat .skhdrc
z ed
up1
ddev start
z /Users/nmccloskey/.config
ls
cd C
cd ConFigurA
ls
ls nvim
ls zsh
ls nix-darwin
ls * -r
ls -r
ls -R
cd .co
cd .config
ls
rmdir nvim
cp ./nvim ./ConFigurA/nvim
cp -r ./nvim ./ConFigurA/nvim
ls
ls -R\\

cd ~
z /Users/nmccloskey/.config/ConFigurA
mkdir home
/opt/homebrew/bin/nvim '/Users/nmccloskey/.config/ConFigurA/nix-darwin/default.nix' 
z ee
z ed
ddev start
cd tests
ls
cypress open 
npx cypress open
ls
npx cypress run
npm install
npm i -f
npx cypress open
z ed
cd tests
npx cypress open
z ed
cd tests
ls
nvim cypress.config.js
z ed
ls
cd test
cd tests
ls
ddev php
ddev @ed.local php
ddev php
ls
cd ..
ls
cat RoboFile.php
nvim RoboFile.php
z ed
ddev drush @ed.local ls
ddev drush @ed.local 
z test
ls
cd cypress
ls
cd scripts
ls
ddev drush @ed.local php:script get-content-type-fields.php
ddev drush @ed.local php:script test/cypress/scripts/get-content-type-fields.php
ddev drush @ed.local php:script tests/cypress/scripts/get-content-type-fields.php
ddev drush @ed.local php:script tests/cypress/scripts/get-newest-content.php
ddev drush @ed.local php:script tests/cypress/scripts/get-content-type-fields.php
ddev drush @ed.local php:script tests/cypress/scripts/get-content-type-fields.php ed_landing_page
z test
nvim cypress.config.js
z ed
cd tests
nvim cypress.config.js
z .config
ls
cd nvim
ls
ncim .config/nvim/lua/core/plugins.lua
nvim .config/nvim/lua/core/plugins.lua
ls
nvim test.json
nvim cypress.config.js
brew services stop skhd
brew services stop yabai
z test
ls
nvim cypress/fixtures/content/content-types/media-advisory.json
z ed
cd tests
ls
npm run test
npm run test\\

npm run test\

z .config/nvim
ls
nvim lua/core/plugin_configs/lsp_config.lua
nvim cypress/fixtures/content/content-types/media-advisory.json
z .config/nvim
nvim lua/core/plugin_configs/lsp_config.lua
nvim cypress/fixtures/content/content-types/media-advisory.json
npm run test\

nvim cypress/fixtures/content/content-types/media-advisory.json
npm run test\

npm run test-del
npm run test\

npm run test-del
npm run test
nvim cypress/fixtures/content/content-types/media-advisory.json
npm run test-del
npm run test
npm run test-del
npm run test
z ed
up1
ddev start
up1
z test
ls
nvim cypress/fixtures/content/content-types/media-advisory.json
z ed
up
up1
z ed
up1
nvim .zshrc
z test
ls
nvim cypress/fixtures/content/content-types/media-advisory.json
z ed
up1
z ed
up 1
up1
z ed
z tests
ls
nvim cypress/fixtures/content/content-types/media-advisory.json
nvim
z tests
z nvim
z tests
up1
z ed
up1
z tests
nvim
z nvim
nvim
/opt/homebrew/bin/nvim '/Users/nmccloskey/Documents/GitHub/ed-gov/tests/cypress/fixtures/content/paragraphs/todo.txt' 
z nvim
nvim
z nvim
nvim
z nvim
nvim
z test
nvim
z ed
git pull
up1
z ed
nvim
z nvim
nvim
z tests
nvim
Z ed
z ed
up1
z tests
ls
npx run test-del
npm run test
npm run test-del
npm run test
z test
npm run test
npm run test-del
z tests
nvim
z nvim
nvim
z tests
nvim
z tests
npm run test
git pull 
npm run test-del
npm run test
npm run test-del
nvim
npm run test-del
npm run test
z tests
npm
npm run test
z nvim
z tests
nvim
skhd &
npm run test
npm run test-del
npm run test
npm run test-del
npm run test
nvim
z tests
nvim
z te
z tests
npm run?
npm run test
npm run test\\

npm run test-del\

npm run test\

npm run test-del\

npm run test
npm run test-del\

npm run test
npm run test-del
npm run test
npm run test-del
npm run test
npm run test-del
npm run test
npm run test-del
npm run test
npm run test-del
npm run test
git pull
up1
z tests
nvim
npm run test-del
npm run test
npm run test-del
npm run test
npm run test-del
npm run test
npm run test-del
npm run test
npm run test-del
npm run test
z tests
git pull
ddev start
npm run test-del\\

npm run test\

z tests
nvim 
npm run test\

npm run test-el\

npm run test-del\

npm run test\

up1
npm run test\

npm run test-del\

npm run test\

npm run test-del\

npm run test\

npm run test-del\

npm run test\

npm run test-del\

npm run test\

npm run test-del\

npm run test\

npm run test-del\

npm run test\

npm run test-del\

npm run test\

ddev drush @ed.local eerp
npm run test-del
git pull
git branch dev
git branch refactor-QA-testing
git -h
git switch
git switch refactor-QA-testing
z tests
nvim
z tests
npm run test\

nvim
npm run test\

npm run test-del\

npm run test\

z nvim
nvim
npm run test\

z tests
git stage
git add
git changes
git -h
git status
git add cypress/fixtures/content/content-types/landing-page.json
npm run test-del\

up1
nvim
upa
up1
nvim
z tests
npx cypress open
z tests
npm install chai-colors --save-dev\

npm i -f
npm install chai-colors --save-dev\

npm install chai-colors --save-dev -f\

git switch refactor-QA-testing
nvim 
npm run test
z tests
npm run test
npm run test-get
npm run test
npm run test-get
npm run test
npm run test-get
npm run test
npm run test-del\

npm run test
z tests
up1
nvim
git -h
git open
git open\\

nvim
cd ..
cd tests
nvim
z tests
npm run test
npm run test-del\\

npm run test
npm run test-del\\

npm run test\

npm run test-del\\\

npm run test-del\

npm run test
git -h
git rebase -h
git rebase
cat .git
git -h
git pull
up1
z tests
up1
z test
nvim
z test
up1\\

up1
z test
up1
z nix
z github
ls
cd nix
ls
mkdir nvim
cp -r ~/.config/nvim ./nvim
ls
mkdir zsh 
cp -r ~/.zshrc ./zsh/.zshrc
cp -r ~/.zsh_aliases ./zsh/.zsh_aliases
git branch refactor-QA-testing
git switch refactor-QA-testing
nvim
z tests
git stage *
cit commit
git commit
git push
npx cypress open
z tests
nvim
z tests
npm run test
npm run test-del
npm run test
git add *
git commit
git push
up1
z nix
ls
nvim
hostname
z test
git pull
up1
z tests
nvim
z tests
nvim
git switch refactor-QA-testing
git status
git --help
git rm
git sw?itch refactor-QA-testing
git switch refactor-QA-testing
nvim
z nvim
nvim
z tests
npm run test
npm install -g json2yaml
sudo npm i -g json2yaml
brew install ripgrep
z tests
npx cypress open
z tests
nvim
z tests
npx cypress open
z tests
npm run test
npm run test-del
npm run test
npm run test-del
npm run test
npm run test-del
npm run test
npx cypress open
qmk setup
brew install qmk/qmk/qmk
qmk setup
cd qmk_firmware
ls
git --help
git branch list
git branch
qmk list-keyboards
qmk list-keyboards | grep key
qmk compile -kb clueboard/66/rev3
qmk compile -kb clueboard/66/rev3 -km default
z tests
up1
git switch refactor-QA-testing
nvim
npm run test
z tests
npm run test
npm run test-del
npx cypress open
z nix
ls
nvim
history | grep nvim
history | grep nix
z nix
nix run
mkdir -p ~/.config/nix/
nvim ~/.config/nix/nix.conf
sudo systemctl restart nix-daemon
sudo reboot
z nix
nix run
z nix
nvim
nix run
nix flake update
nvim
z nix
nix run
z nix
nvim
nix run
nix update
nix flake update
nix r
nix run
z nix
nvim
z nix
nix run
nix flake update
nix run
nic run
nix run
home-manager switch -b backup
z nvim
git commint -m update
git commit -m update
git stage *
git commit -m update
git push
cd ..
ls
rm -r nvim
y
ls
sudo rm -r nvim -y
sudo rm -r nvim 
ls 
nix run
rm ~/.zshrc
nix run
nvim
z nvim
ls
nix run
nvim
nix run
nvim
cat .config/nvim/init.lua
nix run
nvi
nvim
nix run
nvim
brew services list
brew services start yabai
brew services start skhd
ls -a
ls .skhdrc
ca .skhdrc
cat .skhdrc
nvim .skhdrc
ls
nvim .skhdrc
nvim
nvim .skhdrc
npx cypress open
cd tests
npx cypress open
ddev start
cd Documents/GitHub/ed-gov
ddev starty
ddev start
which docker
docker
cd ~
cat .skhdrc
nvim .skhdrc
nix run
docker
cat $PATH
cd /usr/bin
ls
ls | grep docker
ls usr/local/bin
ls
pwd
cd ..
ls
cd local
ls
cd bin
ls
pwd
cat $PATH
/user/local/bin/docker
ls
docker
./docker
pwd
/usr/local/bin/docker
docker
/usr/local/bin/docker
ddev start
nvim /etc/paths
sudo nvim /etc/paths
docker
/usr/local/bin/docker
docker
cat $PATH
nix run
ls
$PATH
docker
ddev start
$path
$PATH
docker
$PATH
nix run
docker
$PATH
docker
echo $PATH
export PATH=$PATH:/usr/local/bin/docker
docker
echo $PATH
/usr/loca/bin/docker
/usr/local/bin/docker
docker
nix run
nix run --show-trace
nix --show-trace run
echo $PATH
env
cd /usr/bin/local/
cd /usr/local/l
ls
cd /usr
ls
cd bin
ls
cd .
cd..
cd ..
ls
cd local
ls
cd bin
ls
history | grep PATH
history | grep path
cat .zshrc
ls
ls -a
cat ~/.zshrc
/usr/local/bin/docker
pwd
nix run
docker
nix run
docker
ls
cd Documents
cd GitHub/ed-gov
ddev start
docker context inspect
docker
cd Documents/GitHub/ed-gov
ddev start
docker
docker context
docker context inspec t
ddev start
$path
$Path
echo $PATH
export PATH=$PATH:/usr/local/bin/docker
docker
ddev start
echo $PATH
/user/local/bin/docker
/usr/local/bin/docker
nvim
nix profile rollback
nvim
docker
ddev start
docker
which ddev
brew install docker
ddev start
echo $PATH
which docker
nix run
ddev start
which docker
nvim
nvim .zshrc
nvim .skhdrc
ls
ls -a
nix run
z nix
ls
cd ..
nix run
z tests
ls
nix run
z tets
nix run
brew install thefuck
ssh nmccloskey@192.168.0.147
ssh nmccloskey@wrongServer
ssh nmccloskey@192.168.1.114
nvim .skhdrc
nvim .skhdrc\\

nix run\\

nix run\

nvim .skhdrc
exit
ct tests
npx cypress open
ls
cd tests
ls
npx cypress open
cd tests
npm i -d cypress-audit
npm i -df cypress-audit
npx cypress open
npm -r lighthouse-audit
npm -u lighthouse-audit
npm uninstall lighthouse-audit
npm uninstall cypress-audit
npm uninstall cypress-audi
npm -i -D @cypress-audit/lighthouse
npm i -D cypress @cypress-audit/lighthouse
npx
npx cypress open
cd ../lighthouse
ls
history | grep lighthouse
history | grep generate
history | grep generate-report
ls
npm run ./generate-report.js
ls
npm run run generate-report.js
npm run generate
node ./generate-report.js
npm i
node ./generate-report.js
cd tests
npx cypress open
z tests
nvim
exit
pwd
nic run
nix run
nvim
nix run
ls
z nvim
ls
cd .config/nvim
ls
cat init.lua
nix update
nix run
cd .config/nvim
ls
cat init.lua
nix run
nvim
z ed
up1
ddev robo update:local ed.local
composer install
ddev start
ddev robo local:update ed.local
cat .skhdrc
z ed
ddev robo local:update ed.local
ddev drush @ed.local search-api-solr:upload-configset ed-gov 1
ddev drush @ed.local search-api-solr:upload-configset ed 1
ddev robo local:update ed.local
dd
ddev robo local:update ed.local
ls
pwd
ddev robo local:update ed.local
z tests
nvim
d
ls
npx cypress open
npx cypress open
cd t l
cd tests
npx cypress open
npm run test
npm run test-del
npm run test
npx cypress opn
ls
npx cypress open
z tests
nvim
pwd
nix run
nvim
nix run
nvim
nis --help
nix --help
nis run --help
nix run --help
nix profile list
z tests
git pull
ddev robo local:update ed.local
curl -L https://github.com/rvaiya/warpd/releases/download/v1.3.5/warpd-1.3.5-osx.tar.gz |  sudo tar xzvfC - / && launchctl load /Library/LaunchAgents/com.warpd.warpd.plist
warpd --list-options
exec warpd --list-options
warpd --list-options
/bin/warpd --list-options
\:q
ext
exit
which warpd
/usr/local/bin/warpd -h
/usr/local/bin/warpd -list-options
/usr/local/bin/warpd --list-options
/usr/local/bin/warpd -h
cat ~/.config/warpd/config
ddev start
z d9test
ddev stop d9test
cd ..
rm d9test
rm -r d9test
mkdir -p ~/drupalpractice
cd drupalparactice
ls
rmdir ~/drupalpractice
mkdir -p ./drupalpractice
cd drupalpractice
ddev init
ddev config --project-type=drupal10 --docroot=web --create-docroot
ddev start
ddev composer create drupal/recommended-project
ddev composer require drush/drush
ddev drush site:install --account-name=admin --account-pass=admin -y
ddev drush uli
ddev launch
cd tests
ls
npm run test
npx cypress open
cd tests
npx cypress open
ddev robo local:update ed.local
ddev start
composer require 'drupal/classy'
z ed
ddev robo local:update ed.local
cat .skhdrc
cd tests
npm run test
npm run test-del
npm run test
ddev robo local:update ed.local
npx cypress open
cd tests
npx cypress open
ddev robo local:update ed.local
npx cypress open
ddev robo local:update ed.local
npx cypress open
z tests
ddev robo local:update ed.local
z tets
ddev robo local:update ed.local
z tests
ddev robo local:update ed.local
z ed
ddev import-db ~/Downloads/ed_2023-05-04.sql
ddev import-db --src=~/Downloads/ed_2023-05-04.sql
ddev drush @ed.local cim -y
ddev describe
ddev robo local:update ed.local
z ed
ddev start
composer require 'drupal/admin_toolbar:^3.4'
ddev composer require 'drupal/admin_toolbar:^3.4'
z ed
ddev start
z ed
ddev robo local:update ed.local
z ed
ddev robo local:update ed.local
z ed
ddev robo local:update ed.local
z ed
ddev robo local:update ed.local
npx cypress open
cd tests
npx cypress open
z ed
ddev start
cd tests
ls
npx cypress open\\

z ed
ddev robo local:update ed.local
z ed 
ddev start
npx cypress open
z ed
ddev start
npx cypress open
cd tests
npx cypress open
z ed
history | grep omit
z ed
history | grep import
ddev db-import ~/Downloads/ed_2023-05-16.sql
ddev db-import --src=~/Downloads/ed_2023-05-16.sql
ddev import-db --src=~/Downloads/ed_2023-05-16.sql
ddev start
ddev delete ed --omit-snapshot
ddev start
ddev robo project:init
ddev delete ed --omit-snapshot
ddev robo project:init
ddev delete ed --omit-snapshot
ddev start
composer require 'drupal/search_api:^1.29'
ddev delete ed --omit-snapshot
ddev start
composer require 'drupal/search_api:^1.29'
ddev composer require 'drupal/search_api:^1.29'
ddev drush en search_api
ddev robo project:init
ddev delete ed --omit-snapshot
ddev start
ddev delete ed --omit-snapshot
ddev robo project:init
ddev drush config:import --partial --source=/web/sites/
ddev delete ed --omit-snapshot
ddev start\\

ddev delet l
ddev delete ed --omit-snapshot
ddev start
ddev robo project:init
ddev delete ed --omit-snapshot
ddev start
ddev robo project:init
z ed
ddev delete ed --omit-snapshot
ddev start
ddev robo project:init
ddev composer install
ddev delete ed --omit-snapshot
ddev start
ddev robo project:init
ddev composer install
ddev delete ed --omit-snapshot
ddev start
ddev robo project:init
ddev delete ed --omit-snapshot
ddev composer install
ddev robo project:init
ddev delete ed --omit-snapshot
ddev composer install
ddev robo project:init
ddev delete ed --omit-snapshot  
ddev composer install
ddev ro
ddev robo project:init 
ddev delete ed --omit-snapshot  
ddev composer install
ddev robo project:init 
ddev delete ed --omit-snapshot  
ddev com
ddev composer install
ddev robo project:init 
ddev composer install
ddev robo project:init 
ddev composer install
ddev robo project:init 
ddev delete ed --omit-snapshot  
ddev composer install && ddev robo project:init
ddev delete ed --omit-snapshot  
ddev composer install && ddev robo project:init
ddev delete ed --omit-snapshot  
ddev composer install && ddev robo project:init
ddev delete ed --omit-snapshot  
ddev composer install && ddev robo project:init
ddev delete ed --omit-snapshot  
ddev composer install && ddev robo project:init
ddev delete ed --omit-snapshot  
ddev composer install && ddev robo project:init
ddev delete ed --omit-snapshot  
ddev composer install && ddev robo project:init
ddev delete ed --omit-snapshot  && ddev composer install && ddev project:init
ddev robo project:init 
ddev delete ed --omit-snapshot  && ddev composer install && ddev robo project:init
composer require 'drupal/search_api:^1.29'
ddev delete ed --omit-snapshot  && ddev composer install && ddev robo project:init
composer require 'drupal/search_api_autocomplete:^1.7'
ddev delete ed --omit-snapshot  && ddev composer install && ddev robo project:init
composer require 'drupal/search_api:^1.29'
ddev delete ed --omit-snapshot  && ddev composer install && ddev robo project:init
history | grep import
ddev import-db --src=~/Downloads/ed_2023-05-16.sql
cd ed
z ed
ddev import-db --src=~/Downloads/ed_2023-05-16.sql
ddev describe
ddev import-db --help
ddev import-db -d ed --src=~/Downloads/ed_2023-05-16.sql
z ed
ddev robo local:update ed.local
z ed
ddev robo local:update ed.local
composer require 'drupal/entity_usage_light:^1.0'
ddev robo local:update ed.local
z ed
history | grep solr
ddev drush @ed.local search-api-solr:upload-configset ed-gov 1
ddev drush @ed.local search-api-solr:upload-configset ed 1
history
ddev robo local:update ed.local
z ed
ddev robo local:update ed.local
z ed
ddev robo local:update ed.local
z ed
ddev robo local:update ed.local
ddev delete ed --omit-snapshot  && ddev composer install && ddev robo project:init
ddev import-db -d ed --src=~/Downloads/ed_2023-05-16.sql
ddev drush user:password admin "admin"
ddev drush user-list
ddev drush user:list
ddev describe
ddev delete ed --omit-snapshot  && ddev composer install && ddev robo project:init
ddev robo project:init 
ddev describe
ddev drush user:list
ddev delete ed --omit-snapshot  && ddev composer install && ddev robo project:init
ddev robo project:init 
ddev des
ddev desc l
ddev describe
ddev stop
ddev start
ddev robo local:update ed.local
ddev delete ed --omit-snapshot  && ddev composer install && ddev robo project:init
ddev robo project:init 
ddev delete ed --omit-snapshot  && ddev composer install && ddev robo project:init
ddev delete ed --omit-snapshot
ddev robo  l
ddev robo project:init 
ddev delete ed --omit-snapshot && ddev robo project:init
ddev composer remove google_analytics
ddev composer remove drupal/google_analytics
ddev delete ed --omit-snapshot  && ddev composer install && ddev robo project:init
ddev delete ed --omit-snapshot
ddev start
ddev delete ed --omit-snapshot  && ddev composer install && ddev robo project:init
ddev delete ed --omit-snapshot
ddev start
ddev launch
ddev delete ed --omit-snapshot  && ddev composer install && ddev robo project:init
ddev robo project:init
ddev robo local:update ed.local
ddev import-db -d ed --src=~/Downloads/ed_2023-05-16.sql
ddev robo local:update ed.local
ddev drush @ed.local cim -y
ddev robo local:update ed.local
ddev delete ed --omit-snapshot
ddev robo project:init
ddev status
ddev start
ddev robo project:init
ddev stop
ddev start
ddev stop
ddev start
ddev robo project:init
ddev composer install
ddev delete ed --omit-snapshot
ddev start
ddev robo project:init
ddev stop
cd ..
yes | rm -r ed-gov
git clone https://github.com/mobomo/ed-gov
ddev start
cd ed-gov
ddev start
ddev robo project:init
ddev composer install
ddev robo project:init
ddev robo local:update ed.local
ddev describe
ddev import-db -d ed --src=~/Downloads/ed_2023-05-16.sql
ddev robo local:update ed.local
ddev drush @ed.local cim -y
ddev robo local:update ed.local
ddev composer install
Declaration of Drupal\entity_usage_light\Routing\RouteSubscriber::getSubscribedEvents() must be compatible with Drupal\Core\Routing\RouteSubscriberBase::getSubscribedEvents()d
ddev drush @ed.local cim -y
ddev robo local:update ed.local
ddev drush user:list
ddev li
ddev drush li
ddev drush @ed.local user:list
ddev drush @ed.local user:login --name=admin
ddev drush @ed.local user:list
ddev drush @ed.local user-list
ddev drush @ed.local user:information --name=admin
ddev drush @ed.local user:information admin
ddev drush @ed.local user:password admin "admin"
ddev drush @ed.local user:unblock admin
ddev drush @ed.local user:information admin
ddev drush @ed.local user:unblock admin
ddev drush @ed.local user:login admin
ddev drush @ed.local user:password admin "test"
ddev drush @ed.local cim -y
ddev robo local:update ed.local
ddev start
ddev robo local:update ed.local
ddev drush @ed.local user:unblock admin
ddev restart
ddev describe
z ed 
ddev import-db -d ed --src=~/Downloads/ed_2023-05-16.sql
ddev robo local:update ed.local
ddev drush @ed.local user:login admin
ddev drush @ed.local upwd admin --password="admin
ddev drush @ed.local upwd admin --password="admin"
ddev drush @ed.local upwd admin min
ddev import-db --target-db=ed --src=~/Downloads/ed_2023-05-16.sql
ddev robo local:update ed.local
ddev drush @ed.local cim -y
ddev robo local:update ed.local
ddev drush @ed.local cim -y
ddev robo local:update ed.local
ddev composer install
ddev import-db --target-db=ed --src=~/Downloads/ed-export.sql
ddev robo local:update ed.local
history | grep solr
ddev drush @ed.local user:login admin
ddev drush @ed.local user:list
history | grep list
history | grep user
ddev drush @ed.local uli
ddev drush uli
ddev drush @ed.local uli
ddev robo local:update ed.local
history | grep user
history | grep solr
ddev drush @ed.local search-api-solr:upload-configset ed 1
ddev robo local:update ed.local
ddev start
cd tests
npx cypress open
ddev robo local:update ed.local
npx cypress open
cd test
npx cypress open
npm i
npm i -f
npx cypress open
npm run test
npx cypress open
cd test
cd tests
npm run test
npm run test-del
npm run test
npm run test-del
npm run test
npm run test-del
npm run test
npm run test-del
npm run test
npm run test-del
npm run test
npm run test-del
ddev test
npm run test\\

npm run test\

ddev drush @ed.local php:script tests/cypress/scripts/get-newest-content.php\\

ddev drush @ed.local php:script tests/cypress/scripts/get-newest-content.php -- "ed_landing_page"\

ddev drush @ed.local php:script tests/cypress/scripts/get-newest-content.php -- ed_landing_page\

npm run test
ddev drush @ed.local php:script tests/cypress/scripts/get-newest-content.php -- ed_landing_page\

npm run test
ddev drush @ed.local php:script tests/cypress/scripts/get-newest-content.php -- \

npm run test
ddev drush @ed.local php:script tests/cypress/scripts/get-newest-content.php -- \

ddev drush @ed.local php:script tests/cypress/scripts/get-newest-content.php -- ed_media_advisory\

npm run test
npm run test-del
npm run test
npm run test-del
ping google.com
ddev start
cd ..
cd ed-gov
ddev robo local:update ed.local
ddev drush @ed.local roles:list
ddev drush @ed.local role:list
ddev drush @ed.local role:list office_content_contributer
z ed
ddev robo local:update ed.local
ddev start
ddev robo local:update ed.local
ddev drush @ed.local role:list filter="office_content_contributer\
\

ddev drush @ed.local role:list filter="office_content_contributer"\
\

ddev drush @ed.local role:list\
\

ddev drush @ed.local role:list filter="editor_federal_student_aid"\
\

ddev drush @ed.local role:list editor_federal_student_aid\
\

ddev drush @ed.local role:list --help\
\

ddev drush @ed.local role:permissions editor_federal_student_aid
ddev drush @ed.local role:list --fields='title id'\
\

ddev drush @ed.local role:list --fields='title'\
\

ddev drush @ed.local role:list\
\

ddev drush @ed.local role:list --fields='id'\
\

ddev drush @ed.local role:list --field='id'\
\

ddev drush @ed.local role-list\
\

ddev drush @ed.local role-list anonymous\
\

ddev drush @ed.local role-list --help\
\

exit
z ed
ddev drush @ed.local role-list --help\
\

ddev drush @ed.local role-list --field=ID
ddev drush @ed.local role-list --field=rid
ddev drush @ed.local role-list --field="role label"
ddev drush @ed.local role-list --field="Role Label"
ddev drush @ed.local role-list --filter="label='Anonymous user'\
"
ddev drush @ed.local role-list --filter="label='Anonymous user'"\
"\
\
ddev drush @ed.local role-list --filter="label='Anonymous user'"\
"
ddev drush @ed.local role-list --filter="label='Anonymous user'"
ddev drush @ed.local role-list --filter="Anonymous user"
ddev drush @ed.local role-list "Anonymous user\
"
ddev drush @ed.local role-list \
"\

ddev drush @ed.local role-list
ddev drush @ed.local role-list --filter="machine_name=contributor_federal_student_aid"
ddev drush @ed.local role-list --filter="ID=contributor_federal_student_aid"
ddev drush @ed.local role-list --filter="label='Editor: Federal Student Aid'"
ddev drush @ed.local role-list --fields="ID,Role Label, Permisions\
"
ddev drush @ed.local role-list --fields="ID,Role Label, Permissions"
ddev drush @ed.local role-list --fields="ID,Role Label,Permissions"
ddev drush @ed.local role-list --fields="ID"
ddev drush @ed.local role-list --fields="ID" --filter="ID=anonymous"
ddev drush @ed.local role-list --fields="ID" --filter='ID=anonymous'
ddev drush @ed.local role-list --filter='ID=anonymous'
ddev drush @ed.local role-list --filter='rid=anonymous'
ddev drush @ed.local role-list --filter='rid*=a'
ddev drush @ed.local role-list --fields=*
ddev drush @ed.local --filter="rid*=a" role:list
ddev drush @ed.local --filter="use workbench access" role:list
ddev drush @ed.local cr
ddev drush @ed.local --filter="rid*=a" role:list
ddev drush @ed.local --filter="use workbench access" role:list
ddev drush @ed.local role:list --field='rid'
ddev drush @ed.local role:list --field='ID'
ddev drush @ed.local role:list
ddev drush @ed.local role:list --field='label'
ddev drush @ed.local role:list --fields='rid,label'
ddev drush @ed.local role:list --fields='rid,label' --filter="rid*=a"
npx cypress open\
\

cd tests
npx cypress open\
\

npm i
npm i -f
npx cypress open\
\

ddev drush @ed.local role:list --filter="workbench access"
ddev drush @ed.local role:list
ddev drush @ed.local role:list | grep application_administrator
ddev drush @ed.local role:list | grep --color -E application_administrator
ack
egrep
ddev drush @ed.local role:list | egrep application_administrator
ddev drush @ed.local role:list | grep --color -E  "^|application_administrator"
npx cypress open\
\

npm run test
clear
npm run test
npx cypress open
npm run test
cd tests
npm run test
ddev drush @ed.local role:list | grep --color -E  "^|office_chief_editor"
npm run test
ddev drush @ed.local role:list | grep --color -E  "^|content_administrator"
npm run test
npx cypress open
ddev drush @ed.local role:list | grep --color -E  "^|content_administrator" > ./perms.txt
ddev start
ddev robo local:update ed.local
ddev start
z l
z ed
cd test
cd tests
npx cypress run
npx cypress run --browser=chrome
z ed
nvim
z nixos-config
ls
nvim
z nixos-config
nix run
nix
nvim
nix run
nvim
z ed
nvim
nix run
nvim
z ed
nvim
nix run
nvim
nix run
nvim
z ed
cd test
ls
cd tests
ls
nvim cypress.config.js
nix run
z ed
cd tests
nvim cypress.config.js
nix run
nvim
z ed
nvim
brew install MonitorCotrol
brew install MonitorControl
z tests
nvim
z tests
npx cypress open
z tests
z nixos-config
nix run
z tets
z tests
nvim
npx cypress open
z tests
npx
npx cypress open
exit
z /Users/nmccloskey/Documents/GitHub
mkdir ./map
cd map
/
mv ~/Downloads/map.jpeg ./
ls
z GitHub
ls
cd map
ls
touch index.html
nvim index.html
z ed
nvim
z nixos-config
nvim
nix run
z ed
nvim
z nixos-config
nvim
nix run\\

nvim 
z nixos-config
nix run
z ed
nvim
nix run
nvim
nix run
nvim
;
nix run
nvim
ls .skhdrc
cat .skhdrc
z tests
nvim package.json
z tests
npm run test
npm run test'\

npm run test\

z tests
nvim p
nvim package.json
npm run test\

ddev drush @ed.local php:script tests/cypress/scripts/check-role-permissions.php -- content_administrator 'edit all content,view all content,create all content,revert all content,delete all content'
z ed
ddev robo local:update ed.local
ddev drush @ed.local state:set system.maintenance_mode 0 --input-format=integer
ddev robo local:update ed.local
history | grep sim
history | grep cim
ddev drush @ed.local cim -y
ddev robo local:update ed.local
https://mobomo.slack.com/files/U045P9D1N94/F05BQLD3H1B/image.pnghttps://mobomo.slack.com/files/U045P9D1N94/F05BQLD3H1B/image.pnghttps://mobomo.slack.com/files/U045P9D1N94/F05BQLD3H1B/image.pnghttps://mobomo.slack.com/files/U045P9D1N94/F05BQLD3H1B/image.pnghttps://mobomo.slack.com/files/U045P9D1N94/F05BQLD3H1B/image.pnghttps://mobomo.slack.com/files/U045P9D1N94/F05BQLD3H1B/image.pnghttps://mobomo.slack.com/files/U045P9D1N94/F05BQLD3H1B/image.pnghttps://mobomo.slack.com/files/U045P9D1N94/F05BQLD3H1B/image.pnghttps://mobomo.slack.com/files/U045P9D1N94/F05BQLD3H1B/image.png
ddev composer install
ddev robo local:update ed.local\ 
ddev robo local:update ed.local
ddev composer install
ddev rob 
ddev robo local:update ed.local
ddev robo cacheclear
ddev composer clearcache
ddev composer install
ddev robo update:local ed.local
ddev robo local:update ed.local
ddev import-db --target-db=ed --src=~/Downloads/ed_2023-06-09.sql
ddev robo local:update ed.local
cd tests
npx cypress open
npm i -d lighthouse
npm i -df lighthouse
npm run ./generate-report.js
npm run ./lighthouse/generate-report.js
cd lighthous
ls
cd lighthouse
npm run ./generate-report.js
node ./generate-report.js
z ed
ddev robo local:update ed.local
ls
ddev robo local:update ed.local
ddev drush @ed.local cim -y
ddev restart
ddev robo local:update ed.local
ddev composer install
z ed
ddev composer install
ddev robo local:update ed.local
z tests
nvim
z tests
cd selenium
pip install  selenium
pip remove selenium
pip delete selenium
pop uninstall selenium
pip uninstall selenium
ls
pip install selenium==3.141.59
pip install selenium==3.141.0
ls
python main.py
python3 main.py
ls
mkdir ./drivers
cd drivers
wget https://edgedl.me.gvt1.com/edgedl/chrome/chrome-for-testing/114.0.5735.133/mac-x64/chrome-mac-x64.zip
ls
uzip
unzip
unzip ./chrome-mac-x64.zip
ls
cd chrome-mac-x64
ls
python3 main.py
cd ..
python3 main.py
ls
cd ..
python3 main.py
chmod +x ./drivers/chrome-mac-x64
python3 main.py
chmod +x ./drivers/chrome-mac-x64/Google\ Chrome\ for\ Testing.app
python3 main.py
ls drivers/chrome-mac-x64
mv drivers/chrome-mac-x64/Google\ Chrome\ for\ Testing.app drivers/chrome-mac-x64/test.app
ls drivers/chrome-mac-x64
python3 main.py
chmod +x ./drivers/chrome-mac-x64/test.app
python3 main.py
cd ./drivers/chrome-mac-x64
ks
ls
ls -l
chmod 777 ./test.app
cd ../..
python3 main.py
ls -l ./drivers/chrome-mac-x64
ls -l
chmod +x main.py
python3 main.py
z test
z tests
cd selenium
nvim
z selenium
python3 main.py
/Users/nmccloskey/Documents/GitHub/ed-gov/tests/selenium/drivers/chrome-mac-x64/chromedriver ; exit;
python3 main.py
/Users/nmccloskey/Downloads/chromedriver ; exit;
/Users/nmccloskey/Documents/GitHub/ed-gov/tests/selenium/drivers/chrome-mac-x64/chromedriver ; exit;
python3 main.py
ls drivers/chrome-mac-x64
ls -l drivers/chrome-mac-x64
ls -la drivers/chrome-mac-x64
ls
pip install webdriver-manager
python3 main.py
pip selenium -v
selenium -v
pip uninstall selenium
pip install selenium==3.0.0
python3 main.py
z ed
ddev robo local:update ed.local
git push
git fetch origin
git pull
git push
git push --verbose
cat .skhdrc
nvim .skhdrc
z seleium
z selenium
ls
python3 main.py
nvim main.py
z selenium
python3 main.py
z seleniumBase
z GitHub
cd SeleniumBase
ls
nvim install.sh
z /Users/nmccloskey/Documents/GitHub/SeleniumBase
nvim install.sh
pip install -h
pipenv install
pip install --user pipenv
pip install --upgrade pip
z selenium
nvim requirements.txt
pipenv install selenium=3.141.0
python3
z sel
pipenv install selenium=3.141.0
cat /usr/local/bin
ls /usr/local/bin
ls /usr/local/bin/pip3
sudo pip install pipenv
ls /usr/local/bin
pipenv
sudo pip uninstall pipenv
pip uninstall pipenv
pip install 
pip install -r 
pip install -r ./requirements.txt
z /Users/nmccloskey/Documents/GitHub/nixos-config
nvim
z /Users/nmccloskey/Documents/GitHub/nixos-config
ls
nix run
nvim
nix run
nvim
which nvim
cd .config/nvim
ls
cd ~/.config/nvim
ls
nvim init.lua
history | grep nix
nix-store --query --requisites /run/current-system
nix-store --query --requisites /run/current-system | grep copilot
nix-env --uninstall copilot-lua
nix-env --uninstall vimplugin-copilot-lua
cd /nix/store/x66lmrlc3dvr9r0sy4gjz82ny4mf4j78-vimplugin-copilot.lua-2023-03-28
ks
ls
ls -la
nvim
ls
find Comment
find comment-nvim
cd /opt/homebrew
ls
cd share/luajit-2.1.0-beta3
ls
cd /usr/local/share/lua
cd /usr/local/share
ls
ls /opt/homebrew/share/luajit-2.1.0-beta3
ls /opt/homebrew/lib
/nix/store/x66lmrlc3dvr9r0sy4gjz82ny4mf4j78-vimplugin-copilot.lua-2023-03-28cd
cd /
find comment-nvim
find Comment
find Comment.lua
find comment-nvim.lua
ls -lR ./ | grep '^l'
ls -lR ./ | grep '^l' | grep comment
ls -lR ~/ | grep '^l' 
ls -lR ~/ | grep '^l*x' 
ls -lR ~/ | grep '^l.*\.lua' 
ls -lR ~/ | egrep '^l.*\.lua' 
sudo ls -lR ~/ | egrep '^l.*\.lua' 
which nvim
z /Users/nmccloskey/Documents/GitHub/nixos-config
nvim
nix run
z nixos-config
nix run
nix-tree
nix-env -i nix-tree
nix-tree
nix-tree -h
find nix-tree
which nix-tree
nix-store --query --requisites /run/current-system | grep copilot
nix-store --query --requisites /run/current-system 
nix-store --query --requisites /run/current-system | grep nix-tree
history | grep tree
use {\
  "zbirenbaum/copilot.lua",\
  cmd = "Copilot",\
  event = "InsertEnter",\
  config = function()\
    require("copilot").setup({})\
  end,\
}
nix-env -iA nixos.nix-tree
nix-env -iA nixpkgs.nix-tree
nix-tree
nix-store --query --requisites /run/current-system | grep nix-tree
find nix-tree
cd /
find nix-tree
nix-store --query -h
nix-store --h
nix-store --help
nix-shell -p nix-tree
/nix/store/zwxx9950imjlh8hilgf1j2ivlnk9xa6q-vimplugin-comment.nvim-2023-03-10
ls
cd ..
find / -type l
nvi
nvim
/opt/homebrew/Cellar/neovim/0.9.0/share/nvim/runtime/indent.vim; exit
cd /opt/homebrew/Cellar/neovim
ls
cd 0.9.0
ls
cd share/nvim
ls
cd runtime
ls
ls -l
ls -lr
ls -lR ~/ | egrep '^l.*\.lua' 
ls -lR ./ | egrep '^l.*\.lua' 
ls
cd plugin
lws
ls
cd ~/.local/share/nvim
ls
cd ..
mv ./nvim ./nvim-old
z  l
z nixos-config
nix run
nvim
cd ~/.local/share
mv ./nvim ./nvim-old
mv ./nvim-old ./nvim
z nixos-config
nix run
nvim
z nixos-config
nvim
cd .nvim
ls
nvim
ls
cd nvim
ls
nvim
ls -lR ./ | egrep '^l.*\.lua' 
ls -lR ./ | egrep '^l' 
ls -lR ./ | egl' \
cd ..\
\
;\
'
cd ..
mv ./nvim ./nvim-old
nix run
nvim
nix run
nvim
nix run
nvim
nix run
nvim
nix-shell -p nix-tree
z nixos-config
nix run
nvim
cd .config/nvim
ls
cd ..
cd nvim
ls
nvim init.lua
mv init.lua init.lua.old
nvim
nix run
nvim
ls
nvim init.lua
nix run
nvim
nix run
nvim
cd /
find nvim
find -r nvim
find -h
find -H
find --help
man fid
man find
find nvim
cd ~
find nvim
find neovim
find / nvim
z nvim
ls
cd ..
z homebrew
ls
find ./ nvim
homebrew delete nvim
brew uninstall nvim
nvim
z nixos-config
nix run
nvim
nix run
nvim
nvim init.lua
nix run
nvim
nix run
nvim
z ed
cd tests
ls
nvim cypress.config.js
z ni
z nixos-config
nix run
z ed
cd tests
nvim cypress.config.js
nix run
z tests
nvim
nix run
z tests
nvim
z nvim
ls
nvim i
nvim init.lua
nix run
nvim
nix run
nvim
z tests
nvim cypress.config.js
z nixos-config
nvim 
nvim cypress.config.js
z nixos-config
nix run
ls
nvim get-pip.py
nvim
nvim get-pip.py
nix run
nvim get-pip.py
z nixos-config
nvim
z ed
ddev robo local:update ed.local
z ed
ddev robo local:update ed.local
z ed
ddev robo local:update ed.local
git pull
z ed
ddev robo local:update ed.local
z seleium
ls
z selenium
ls
nvim conftest.py
z selenium
python3 conftest.py
pytest
ls
pytest-bdd generate features/some.feature > tests/features/test_some.py
pytest-bdd generate tests/features/test.feature > tests/features/test_some.py
pytest
ls
mv tests/features ./features
mv tests/step_definitions ./step_definitions
mv helpers ./step_definitions/helpers
pytest-bdd
pytest
bdd -h
pytest-bdd -h
pytest
history | grep selenium
cd examples
pytest
python3 test_selenium.py
pip install webdriver-manager
python3 test_selenium.py
selenium -v
python3 test_selenium.py
locate selenium
python3 -c 'import selenium; print selenium.__version__\
'
python3 -c 'import selenium; print selenium.__version__'
python3 -c 'import selenium; print(selenium.__version__)'
python3 test_selenium.py
pip install -r ./requirements.txt
cd ..
pip install -r ./requirements.txt
pip freeze | xargs pip uninstall -y
pip freeze
pip freeze | cut -d "@" -f1 | xarg pip uninstall -y
pip freeze | cut -d "@" -f1 | xargs pip uninstall -y
pip frees
pip freeze
pip install -r ./requirements.txt
cd examples
python3 test_selenium.py
pip install webdriver-manager
python3 test_selenium.py
cd ..
ls
mkdir ./tests
mv conftest.py tests/conftest.py
mv drivers tests/drivers
mv examples tests/examples
mv features tests/features
mv pytest.ini tests/pytest.ini
mv step_definitions tests/step_definitions
docker run -h
docker run --hel0p
docker run --help
docker build -t test .
docker run pytest
docker run test
docker build -t test .
docker run test
docker build -t test .
docker run test
pytest
ls
cd tests
ls
ct features
cd features
ls
docker build -t test .
cd ../..
docker build -t test .
docker run test
pytest
docker prune
docker container prun
docker container prune
docker image prune
docker build -t test .
docker run test
z GitHub
mkdir test
cd tests
ls
touch Dockerfile
nvim Dockerfile
mv Dockerfile ./test/Dockerfile
ls
cd test
nvim Dockerfile
z GitHub
cd test
docker build -t script .
docker run script
z selenium
cd examples
cd tests
cd examples
python3 test_selenium.py
z sele
z selenium
ls
cd tests/examples
python3 test_selenium.py
git pull
z selenium
ls
nvim
z sele
z selenium
open .
ls
docker compose up
docker compose down
docker compose up
docker image ls
docker compose up
docker compose down --volumes
z sele
z selenium
ls
docker compose up -d
docker compos down
docker compose down --volumes
docker compose up
open.
open .
docker compose up
docker compose run .
docker build -t test-containter .
docker run test-container
docker run test-containter
docker compose down --volumes
docker copose up
docker compose up
docker compose down
docker compose up
docker compose run pytest
docker compose down
docker compose down --volumes
docker compose up
docker compose run tests
z sele
z sleneium
ls
nvim example/pytest-bdd/test_stepDef.py
z selen
open. 
open .
z slen
z selen
docker compose run tests
docker compose run tests =s
docker compose run tests -s
docker compose down --volumes
docker compose up
docker run test-containter
docker run tests
docker compose run tests -s
docker compose run tests 
docker compose build .
docker compose build
docker compose run tests 
docker compose down --volumes
docker container prune
docker images prune
docker compose up
docker compose build
docker compose run tests 
docker compose build
docker compose run tests 
docker compose build
docker compose run tests 
docker compose run tests -e OPTIONS="--verbose"
docker compose build
docker compose run test --verbose
docker compose run tests] --verbose
docker compose run tests --verbose
pytest --verbose
pytest -s --verbose
docker compose run tests -s --verbose
docker compose build
docker compose run tests 
docker compose build
docker compose run tests 
docker compose build
docker compose run tests 
docker compose build
docker run tests -t --verbose
docker compose run tests -t --verbose
docker compose build
docker compose run tests -t --verbose
docker run -d selenium-tests -t -verbose
docker compose run 
docker compose build
docker compose run tests
docker compose build
docker compose run tests
docker compose build
docker compose run tests
docker compose build
docker compose run s
pytest -s 
docker compose build
docker compose run tests
docker compose build
docker compose run tests
pytest -s 
docker compose run tests
pip install selenium
pip update selenium
pip upgrade selenium
pip install --upgrade
pip install --upgrade selenium
docker compose run tests
pytest -s 
pip install selenium==3.0.0
pytest -s 
docker images prune
docker container prune
docker compose down --volumes
docker compose up
docker compose run tests
pytest -s 
docker compose run tests
docker composer build
docker compose build
docker pull browserless/chrome
docker compose build
docker compose run tests
z selen
ls
docker compose run tests
docker compose build
docker compose run
docker compose run tests
z selen
nvim Dockerfile
docker compose run tests
docker compose build
git push
ddev start
docker compose build
docker compose run tests
z selen
docker compose run tests
docker image prune
docker container prune
docker image prune
docker volume prune
z selen
docker compose build
docker compose run tests
docker compose build
docker compose run tests
docker compose build
docker compose run tests
z nixos-config
nvim
docker compose build
docker compose run tests
docker compose build
docker compose run tests
ssh nmccloskey@192.168.1.114
ssh nmccloskey@192.168.0.112
z ed
ddev robo local:update ed.local
z ed
ddev robo local:update ed.local
which chrome
whihc google-chroem
which google-chrome
z selen
nvim
z selen
docker compose build
z ed
ddev robo local:update ed.local
z selen
docker compose build
ls -l
chmod +x wrap_chrome_binary
docker compose build
docker compose run tests
z ed
ddev robo local:update ed.local
docker compose build
docker compose run tests
z selen
docker compose build
docker compose run
docker compose run tests
docker compose build
docker compose run tests
docker compose build
docker compose run tests
pytest run tests
docker compose run tests
docker compose build
docker compose run tests 
pytest
docker compose build
docker compose run tests 
pytest
docker compose run tests 
docker compose build
docker compose run tests 
pytest
z selen
docker compose run tests 
docker compose build
docker compose run tests 
cd ..
ls
cd selen
mv selenium/* ./
ls
rm selenium
rmdir selenium
cd selen
cd selenium
ls
open .
ddev robo local:update ed.local
cd ..
z ed
ddev robo local:update ed.local
z tests
ls
open .
ls
nvim requirements.txt
z tests
nvim requirements.txt
z nixos-config
nvim
z nixos-config
nix run
nvim
z tests
ls
cd step_definitions
ls
nvim helpers.py
git stage *
git commit -m "setup handler for lsp servers"
git push
z tests
nvim helpers.py
z ed
ddev start
z tests
pytest
z ed
cd tests
ls
pip install -r ./requirements.txt
pytest -s
z tests
pytest -s
nvim
z tests
pytest -s
git check-ignore -v -- afile
git check-ignore -v -- __pycache__/
pytest -s
git rm -rf --cached
pytest -s
z tests
pytest -s
z tests
nvim
pytest -s
z tests
pytest -s
ls
ls step_definitions
pytest -s
ddev start
pytest -s
ddev start
pytest -s
,
pytest -s
ddev robo local:update ed.local
z ed
drush @ed.local php-eval "ed_contact_offices_contact_import()\
\

drush @ed.local php-eval "ed_contact_offices_contact_import()"\
\

ddev drush @ed.local php-eval "ed_contact_offices_contact_import()"
pytest -s
pip install behave
open .
behave
behave --no-capture
behave --no-logcapture
behave -s --no-capture --no-logcapture
behave -s --no-capture
behave -s
behave --no-capture
behave -s --no-capture
nvim
pytest -s
z tests
nvim
z tests
behave -s --no-captuyre
behave -s --no-capture
pytest -s
behave -s --no-capture
behave -s --no-capture -v
behave -s --no-capture --no-logcapture
behave -s --no-capture 
behave -s --no-capture
behave -s 
behave
z tests
behave -s
behave -v
nvim behave.ini
z tests
behave -v
nvim
pytest -s
ls
open .
pytest -s
ddev start
pytest -s
?
pytest -s
HOme
pytest -s
pytest --capture=no
pytest --rP
pytest -rp
pytest -rP
?
pytest -rP
pytest -r
pytest -rP
cd /nix/store/x66lmrlc3dvr9r0sy4gjz82ny4mf4j78-vimplugin-copilot.lua-2023-03
pytest -rP
z tests
pytest -rP
skhd
brew services status
brew services info
brew services list
z tests
nvim
z tests
pytest -rP
ddev start
pytest -rP
pytest -rPF
z tests
pip isntall pytest-image-diff
pip install pytest-image-diff
pip install imagehash
pip install imgcompare
pip Pillow
pip install Pillow
ddev robo local:update ed.local
pytest -rPF
z tests
pytest -rPF
z tests
nvim
pytest -rPF
pip install imgcompare
pytest -rPF
ddev start
pytest -rPF
pip install selenium-requests
pytest -rPF
pip remove selenium-requests
history | grep pip
pip uninstall selenium-requests
pip uninstall selenium
pip index versions selenium
pip install selenium-requests==1.3.4
pytest -rPF
selenium -v
pip show selenium
pip index versions selenium
brew install bazelisk
cd ../..
cd ~/Downloads
cd selenium-selenium-3.141.59
bazel //py:selenium-wheel
z tests
ddev robo local:update ed.local
z tests
ddev start
pytest -rPF
z tests
cd ~/Downloads/selenium-selenium-3.141.59
bazel build //py:selenium
ls
cd src
ls
cd ~/Downloads/selenium-selenium-3.141.59
ls
bazel build //py:selenium
ls
cd Downloads
cd selenium-selenium-3.141.59
ls
python -m pip install --user tox
python3 -m pip install --user tox
python3 -m tox --help
bazel build //py:selenium
selenium -v
la
ls
cat README.md
cd Downloads
cd selenium-selenium-3.141.59
bazel //py:selenium-wheel
bazel build //py:selenium-wheel
ls
cd py
ls
bazel build //py:selenium-wheel
cd ..
ls
pip install git+https://github.com/SeleniumHQ/selenium.git@3.141.59
bazel build //py:selenium-wheel
ls 
./go build
./go -T
bre install java
brew install java
./go -T
java
brew install java
java --version
sudo ln -sfn /opt/homebrew/opt/openjdk/libexec/openjdk.jdk \\
     /Library/Java/JavaVirtualMachines/openjdk.jdk
java --version
cd Downloads/selenium-selenium-3.141.59
./go -T
sudo ln -sfn /opt/homebrew/opt/openjdk/libexec/openjdk.jdk \\
     /Library/Java/JavaVirtualMachines/openjdk.jdk\
go //javascript/webdriver/atoms/fragments/inject:active_element                       # ...\
go //javascript/webdriver/atoms/fragments/inject:active_element:android               # ...\
go //javascript/webdriver/atoms/fragments/inject:active_element:chrome                # ...\
go //javascript/webdriver/atoms/fragments/inject:active_element:firefox               # ...\
go //javascript/webdriver/atoms/fragments/inject:active_element:ie                    # ...\
go //javascript/webdriver/atoms/fragments/inject:active_element                       # ...\
go //javascript/webdriver/atoms/fragments/inject:active_element:android               # ...\
go //javascript/webdriver/atoms/fragments/inject:active_element:chrome                # ...\
go //javascript/webdriver/atoms/fragments/inject:active_element:firefox               # ...\
go //javascript/webdriver/atoms/fragments/inject:active_element:ie                    # ...
ls
./go --help
./go build
./go build --trace
sudo ./go build
python pv
python -v
brew install python2.7
brew install python@2.7
brew instal python@2
pyenv
pyenv instal 2.7
pyenv install 2.7
pyenv global 2.7.18
python --version
pyenv version
sudo ./go build
python --version
sudo ./go build
sudo ./go build --trace
history | grep pip install
history | grep "pip install"
cd py
pip install ./
ls
pip instal sekenium-requests=1.3.4
pip install sekenium-requests=1.3.4
pip install sekenium-requests==1.3.4
pip install selenium-requests==1.3.4
pip show selenium
z tests
pytest -rPF
pip install selenium-requests==1.2.7
pip install selenium==3.0.0
pytest -rPF
ddev start
exit
ddev start
pytest -rPF
nvim
z tests
pytest -rPF
open .
ddev robo local:update ed.local
ddev start
ddev robo local:update ed.local
z ed
ddev start
ddev robo local:update ed.local
z ed
ddev db-import --src=~/Downloads/ed_2023-05-16.sql
ddev import-db --target-db=ed --src=~/Downloads/ed_2023-06-09.sql
ls ~/Downloads/
ddev import-db --target-db=ed --src=~/Downloads/ed_2023-05-09.sql
ddev import-db --target-db=ed --src=~/Downloads/ed_2023-05-16.sql
open .
z ed
ddev robo local:update ed.local
ddev robo cim -y
history | grep cim
ddev robo drush @ed.local cim -y
ls
ddev drush @ed.local cim -y
ddev robo update:local ed.local
ddev restart
ddev robo update:local ed.local
ddev stop
ddev delete ed --omit-snapshot
ddev start
ddev robo project:init
ddev drush @ed.local cim -y
ddev composer install
ddev robo project:init
ddev stop
ddev delete ed --omit-snapshot
ddev start
ddev robo project:init
ddev composer install
ddev robo project:init
ddev delete ed --omit-snapshot
ddev start
ddev robo project:init
rm -r vendor
ddev robo project:init
ddev composer install
ls
rm -r ./vendor
ls
ls vendor
ddev composer install
ddev robo project:init
ddev composer install
ddev robo project:init
ddev start
ddev robo project:init
ddev stop
ddev delete ed --omit-snapshot
ddev start
ddev composer install
ddev robo local:update ed.local
ddev robo project:init
‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä(nmccloskey@nmcc-laptop:s000)‚É¥Ä‚É¥É∞\
‚É¥É¥‚É¥Ä(13:55:46 on dev ‚Éºπ)‚É¥Ä‚É¥Ä> composer require goo
composer require 'drupal/google_analytics:^4.0'
ddev robo project:init
--ignore-platform-reqs
ddev drush @ed.local search-api-solr:upload-configset ed 1
ddev list
ddev start
ddev drush @ed.local search-api-solr:upload-configset ed 1
ddev robo project:init
ddev delete ed --omit-snapshot
ddev start
ddev robo project:init
z ed
ddev robo project:init
ddev composer install
ddev robo project:init
ddev composer install 
ddev robo project:init
cd ..
rm -r ed-gov
yes | rm -r ed-gov
ls
git clone https://github.com/mobomo/ed-gov
cd ed-gov
ddev start
ddev composer install 
ddev robo project:init
cd ..
cd ed
cd /var
ls
cd folders
ls
find ./ search_api
sudo find ./ search_api
ls
cd 5w
ls
cd qzf8vgl92r3g3n8xrzj3lkfr0000gn
ls
cd ..
rm -r qz
rm -r qzf8vgl92r3g3n8xrzj3lkfr0000gn
ls
yes | rm -r qzf8vgl92r3g3n8xrzj3lkfr0000gn
sudo yes | rm -r qzf8vgl92r3g3n8xrzj3lkfr0000gn
ls
sudo yes | rm -r qzf8vgl92r3g3n8xrzj3lkfr0000gn
sudo yes | sudo rm -r qzf8vgl92r3g3n8xrzj3lkfr0000gn
cd /
open .
sudo yes | rm -r qzf8vgl
z ed
ddev composer install 
ddev start
ddev robo project:init
ddev composer remove drupal/google_analytics
ddev robo project:init
ddev stop
ddev delete ed --omit-snapshot
ddev start
ddev composer install
ddev robo project:init
ddev stop
ddev delete ed --omit-snapshot
rm -r vendor
yes |\
rm -r vendor
ls
ddev start
ddev robo project:init
ddev composer install && ddev robo project:init
ddev composer install
ddev start
z ed
ddev start
ddev composer install
ddev robo project:init
ddev composer remove drupal/google_analytics
ddev composer install
ddev robo project:init
ddev start
ddev composer install
ddev robo project:init
ddev start
ddev composer install
ddev robo project:init
ddev stop
ddev delete ed --omit-snapshot
ddev start
ddev composer install
ddev robo project:init
ddev robo project:init ed.local local
ddev start
ddev composer install
ddev composer install ed.local local
ddev robo project:init ed.local local
ddev robo project:init ed.local basic
ddev robo project:init
ddev delete ed --omit-snapshot
ddev start
ddev composer install
ddev import-db --target-db=ed --src=~/Downloads/ed_2023-05-16.sql
ddev robo local:update ed.local
ddev composer install
ddev robo local:update ed.local
Declaration of Drupal\entity_usage_light\Routing\RouteSubscriber::getSubscribedEvents() must be compatible with Drupal\Core\Routing\RouteSubscriberBase::getSubscribedEvents(): array in /var/www/html/web/modules/contrib/entity_usage_light/src/Routing/RouteSubscriber.php on line 79\

ddev composer install
ddev robo local:update ed.local
ddev composer install
ddev robo local:update ed.local
history | grep config
ddev drush @ed.local search-api-solr:upload-configset ed 1
ddev robo local:update ed.local
ddev drush uli
ddev drush @ed.local upwd admin --password="admin"
ddev drush @ed.local uli
ddev local:update
ddev robo local:update ed.local
cd tests
ls
pytest -rPF
z tests
nvim
pytest -rPF
pytest -rPF -m wip
open .
pytest -rPF -m wip
open .
pytest -rPF -m wip
open .
z ni
nvim
pytest -rPF -m wip
pytest -s -m wip
nix-env --uninstall vimplugin-
pytest -s -m wip
java --version
pytest -s -m wip
ddev robo local:update ed.local
pytest -s -m wip
open .
pytest -s -m wip
z ed
ddev robo local:update ed.local
cd tests
nvim
z ed
ddev robo local:update ed.local
cd tests
pytest -s -m wip
open .
pytest -s -m wip
z ed
ddev robo local:update ed.local
z tests
nvim
ddev robo local:update ed.local
cd tests
pytest -s -m wip
z ed
ddev robo local:update ed.local
z ed
cd tests
nvim
pytest -s -m wip
nvim
pytest -s -m wip
nvim
pytest -s -m wip
cd "/Users/nmccloskey/.COVolumes/_ftp/folder1"
media
diskutil list
diskutil eraseDisk NTFS "Media"
cd /dev/disk5
diskutil eraseDisk NTFS "Media"
ddev robo local:update ed.local
pytest -s -m wip
z ed 
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
z ed
cd tests
ls
nvim
pytest -s -m wip
ddev drush @ed.local php:script tests/src/scripts/create-content.php -- content/paragraphs/hightlight.yml 0 createParent
ddev drush @ed.local php:script tests/src/scripts/create-content.php -- content/paragraphs/highlight.yml 0 createParent
ddev drush @ed.local php:script tests/src/scripts/create-content.php -- content/paragraphs/image-left.yml 0 createParent
nvim
z tests
nvim 
z tests
pytest -s -m wip
z tests
pytest -s -m wip
z tests
pytest -s -m wip
z tests
nvim
z tests
pytest -s -m wip
z tests\\

nvim
z tests\\

pytest -s -m wip
ddev start
git pull
ddev robo local:update ed.local
ddev robo local:update ed.local\\

pytest -s -m wip
nvim 
z tests
nvim
z tests
pytest -s -m wip
open .
pytest -s -m wip
open .
pytest -s -m wip
#
pytest -s -m wip
?
pytest -s -m wip
z tests
nvim
open . 
pytest -s -m wip
z ed
git pull
ddev robo local:update ed.local
cd tests
nvim
ddev robo local:update ed.local
nvim
pytest -s -m wip
q
ddev robo local:update ed.local
z tests
ddev robo local:update ed.local
nvim
z tests
dd
ddev robo local:update ed.local
z tests
nvim
git pull
ddev robo local:update ed.local
pytest -s -m wip
ks
pytest -s -m wip
kjk
pytest -s -m wip
z tests
nvim
ddev start
pytest -s -m wip
HOme
pytest -s -m wip
java --version
pytest -s -m wip
z tests
nvim
pytest -s -m wip
ddev start
pytest -s -m wip
nvim
z tests
nvim
pytest -s -m wip
ddev robo local:update ed.local
pytest -s -m wip
ddev drush @ed.local php:script tests/src/scripts/create-content.php -- content/paragraphs/WYSIWYG.yml 0 createParent
ddev drush @ed.local php:script tests/src/scripts/create-content.php -- content/paragraphs/WYSIWYG-tets.yml 0 createParent
ddev drush @ed.local php:script tests/src/scripts/create-content.php -- content/paragraphs/WYSIWYG-test.yml 0 createParent
pytest -s -m wip
ddev drush @ed.local php:script tests/src/scripts/create-content.php -- content/paragraphs/WYSIWYG-test.yml 0 createParent
pytest -s -m wip
ddev drush @ed.local php:script tests/src/scripts/create-content.php -- content/paragraphs/WYSIWYG-test.yml 0 createParent
pytest -s -m wip
pytest -s -m testing
open .
ddev drush @ed.local php:script tests/src/scripts/create-content.php -- content/content-types/press-release.yml 50
ddev drush @ed.local php:script tests/src/scripts/cleanup-conent.php
ddev drush @ed.local php:script tests/src/scripts/cleanup-content.php
ddev drush @ed.local php:scric
pytest -s -m testing
z tests
ddev robo local:update ed.local
z tests
git pull
ddev robo local:update ed.local
nvim
pytest -s -m testing
ddev stop 
z tests
ddev robo local:update ed.local
z tests
nvim
pytest -s -m testing
pytest -s -m not wip
pytest -s -m "not wip"
open . 
ssh nmccloskey@192.168.0.116
ssh nmccloskey@192.168.0.117
nvim
ddev robo local:update ed.local
history | grep import
ddev import-db --target-db=ed --src=~/Downloads/ed_2023-05-16.sql
ddev robo local:update ed.local
ddev drush @ed.local upwd admin --password="admin"
history | grep ddv
history | grep ddev
ddev drush @ed.local ulip
ddev drush @ed.local uli
cd ../..
ls
cd drupalpractice
ls
history | grep drupalpractice
history
z drupalpractice
nvim
ddev start
z ed
ddev robo local:update ed.local
z tests
ddev robo local:update ed.local
ddev describe
z tests
ddev robo local:update ed.local
ddev describe
z ed
ddev drush @ed.local eval "print_r(array_keys(entity_get_info)))"
ddev drush @ed.local eval "print_r(array_keys(entity_get_infoi())))"
ddev drush @ed.local eval "print_r(array_keys(entity_get_infoi())));"
ddev drush @ed.local eval "print_r(array_keys(entity_get_info())));"
ddev drush @ed.local eval "print_r(array_keys(entity_get_info()));"
ddev drush @ed.local eval "print_r(array_keys(\Drupal::entity_get_info()));"
ddev drush @ed.local eval "print_r(array_keys(\Drupal::entityTypeManager()->getDefinitions()));"
ddev robo local:update ed.local
z ed
nvim
z ed
ddev start
nvim
z ed
ddev robo local:update ed.local
z ed
ddev robo local:update ed.local
z drupalpractice
nvim
z drupalpractice
nvim
ddev start
ddev describ
ddev describe
z ed
git pul
git pull
ddev robo local:update ed.local
z ed
ddev robo local:update ed.local
git pull
ddev robo local:update ed.local
ddev composer install
ddev robo local:update ed.local
git pull
ddev robo local:update ed.local
z drupalpractice
nvim
ddev start
ddev describe
z ed
ddev robo local:update ed.local
exit
exit
z ed
ddev robo local:update ed.local
z ed
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
z ed
ddev robo local:update ed.local
z drupalpractice
nvim
ddev restart
ddev stop
ddev start
ddev restart
ddev drush chache-rebuild
ddev drush cache-rebuild
z ed
git pull
ddev robo local:update ed.local
z ed
ddev robo local:update ed.local
z ed
ddev robo local:update ed.local
z ed
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
z ed
ddev robo local:update ed.local
z ed
ddev robo local:update ed.local
git pull
ddev robo local:update ed.local
z dru
nvim
z ed
ddev robo local:update ed.local
z ed
ddev robo local:update ed.local
z drupalpractice
nvim
exit
z ed
git pull
ddev robo local:update ed.local
z ed
z tests
ddev robo local:update ed.local
z tests
pytest -s
z ed
git pull
ddev robo local:update ed.local
z ed
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
/opt/homebrew/bin/nvim '/private/var/folders/5w/qzf8vgl92r3g3n8xrzj3lkfr0000gn/T/com.apple.MobileSMS/.com.apple.uikit.itemprovider.temporary.zOUGaW/text.txt' 
z ed 
ddev robo local:update ed.local
z ed
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
z ed
ddev stop
ddev start
ddev robo local:update ed.local
ddev composer install
ddev robo local:update ed.local
history | grep cim
ddev drush @ed.local cim -y
ddev composer install
ddev robo local:update ed.local
ddev composer install
ddev robo local:update ed.local
ddev start
ddev robo project:init
ddev db-import --src=~/Downloads/ed_2023-05-16.sql
hsitory | grep import
history | grep import
ddev import-db --target-db=ed --src=~/Downloads/ed_2023-05-16.sql
ddev robo update:local ed.local
z ed
ddev robo update:local ed.local
ddev robo project:init
ddev import-db --target-db=ed --src=~/Downloads/ed_2023-05-16.sql
ddev robo update:local ed.local
git pull
history | grep update
ddev robo local:update ed.local
cd ..
rm -r ./ed-gov
ls
cd ed-gov
ls
ddev start
ddev robo project:init
ddev start
ddev stop 
ddev delete ed --omit-snapshot
ddev start
ddev robo local:update ed.local
ddev start
ddev composer install
ddev describe
ddev import-db --target-db=ed --src=~/Downloads/ed_2023-05-16.sql
ddev robo local:update ed.local
cd .. 
rm -r ./ed-gov
git pull
ls
cd ..
rm -r ./ed-gov
cd ./ed-gov
ls
cd ..
cd ed-gov
ls
ddev composer install
ddev start
ddev import-db --target-db=ed --src=~/Downloads/ed_2023-05-16.sql
ddev robo local:update ed.local
ddev drush @ed.local uli
ddev robo local:update ed.local
history | grep config
ddev drush @ed.local search-api-solr:upload-configset ed 1
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
z ed
ddev robo local:update ed.local
git pull
ddev robo local:update ed.local
z ed
ddev start
z ed
git pull
ddev robo local:update ed.local
z ed
ddev robo local:update ed.local
git pull
ddev robo local:update ed.local
git pull
ddev robo local:update ed.local
z drupalpractice
ddev start
ddev drush site:install --account-name=admin --account-pass=admin -y
nvim
z drupalpractice
nvim
z drupalpractice
nvim
z drupalpractice
git add *
git commit -m "finialized modules"
git puss
git push
ddev stop
ddev delete --omit-snapshot
ddev start
z drupalpractice
nvim
z drupalpractice
nvim
ls
ls -a
cd web
ls
open . 
cd core
cd web/core
nvim
z ed
git chekcout dev
git checkout dev
nvim
z ed
git pull
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
nvim
z ed
ddev robo local:update ed.local
z ed
git pull
z ed 
ddev robo local:update ed.local
git checkout dev
git pull
ddev robo local:update ed.local
z ed
ddev robo local:update ed.local
git checkout dev
git pull
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
z ed
ddev robo local:update ed.local
z ed
git checkout dev
ddev robo local:update ed.local
z ed
ddev robo local:update ed.local
z ed 
ddev robo local:update ed.local
pytest -s
nvim
pytest -s
history | grep docker
docker compose run tests 
docker compose build
cd tests
docker compose run tests 
pip install -r ./requirements.txt
\:w
pip install -r ./requirements.txt
docker build -t test-containter .
history | grep docker
docker compose run tests 
pytest -s
git checkout dev
git pull
ddev robo local:update ed.local
git pull
ddev robo local:update ed.local
z ed
ddev robo local:update ed.local
z ed
ddev robo local:update ed.local
z ed
ddev robo local:update ed.local
z ed 
git pull
ddev robo local:update ed.local
z ed 
cd tests
pytest -s
nvim
pytest -s
pip install -r ./requirements.txt
pytest -s
z ed
cd tests
ddev start
pytest -s
py
pytest -s
python --version
brew install python3
pytest -s
pip install pytest
pip install --upgrade pip
pytest -v
pytest --version
pip3 -r ./requirements.txt
pip3 install -r ./requirements.txt
pytest --version
pytest -s
pip uninstall pytest
pip3 install --upgrade pip
pip3 uninstall pytest
pip3 install pytest
pytest -s
ddev descrive
ddev describe
pytest -s
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
z ed 
ddev robo local:update ed.local
z ed 
ddev robo local:update ed.local
z ed
git checkout dev
git pull
ddev robo local:update ed.local
z ed 
ddev robo local:update ed.local
git pull
ddev robo local:update ed.local
z ed
ddev robo local:update ed.local
selenium -v
hsitory | grep selen
z ed
z /
z ed
git checkout dev
git pull
ddev robo local:update ed.local
z ed
git pulll
git pull
ddev robo local:update ed.local
z ed
ddev robo local:update ed.local
git pull 
ddev robo local:update ed.local
cd tests
pytest -s
z ed
git pull 
git checkout dev
git stash *
ddev robo local:update ed.local
nvim
z ed
nvim
ls .skhdrc
hsitory | grep brew
ls -a
cat .skhdrc
z ed
ddev robo local:update ed.local
git pull
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
z ed
z ee
z ed
git pull
ddev robo local:update ed.local
git pull
ddev robo local:update ed.local
z ed 
git pull
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
z drupalpractice
ddev start
z drupalpractice
composer update "drupal/core-*" --with-all-dependencies
ddev start
ddev delete --omit-snapshot
ddev start
z drupalpractice
nvim
ddev delete --omit-snapshot
ddev start
exit
exti
exit
z ed
git pull
ddev robo local:update ed.local
z ed
ddev robo local:update ed.local
z ed
git checkout dev
git pull
ddev robo local:update ed.local
z ed 
git pull
ddev robo local:update ed.local
git pull
ddev robo local:update ed.local
x rf
z ed
git pull
ddev robo local:update ed.local
z ed
git pull 
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
z ed 
git pull
ddev robo local:update ed.local
z ed 
git pull 
z ed
git pull
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
history | grep pip
z ed 
git pull
ddev robo local:update ed.local
z tests
nvim
git checkout hot-fix-selenium-tests
history | grep zlib
history | grep brew
z ed
git pull
z ed
git checkout dev
git pull
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
z ed
git pul
git pull
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
z githug
z github
ls
mkdir eventBot
cd eventBot
z ed
git pull
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
z ed
git pull
z ed
git pull
ddev robo local:update ed.local
z ed 
git pull
ddev robo local:update ed.local
z ed
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
docker run -d --name nocodb-mysql \\
-v "$(pwd)"/nocodb:/usr/app/data/ \\
-p 8080:8080 \\
-e NC_DB="mysql2://host.docker.internal:3306?u=root&p=password&d=d1" \\
-e NC_AUTH_JWT_SECRET="569a1821-0a93-45e8-87ab-eb857f20a010" \\
nocodb/nocodb:latest
z /Users/nmccloskey/Documents/GitHub/ed-gov
cd ..
git clone https://github.com/nocodb/nocodb-seed\
cd nocodb-seed\
npm install\
npm start
z ed
git pull
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
cat .skhdrc
z ed
git pull
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
ddev start
z ed 
ddev start
git pull
ddev start
?
ddev stop
ddev start
composer install
ddev start
ddev robo local:update ed.local
ddev start
ddev stop
z ed
ddev start
ddev robo local:update ed.local
z ed
git pull 
ddev robo local:update ed.local
composer install
z ed 
git pull
ddev composer install
ddev robo local:update ed.local
git pull
ddev composer install
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
z ed 
git pull
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
z ed
git pull 
ddev robo local:update ed.local
git pull
ddev robo local:update ed.local
git pull
ddev robo local:update ed.local
z ed
git pul
git pull
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
ddev composer require 'drupal/examples:^4.0'
z ed
git pull
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
z ed
ddev robo local:update ed.local
pytest -s
pytest --version
pytest -s -k key_pages
pip install pytest
pytest -s -k key_pages
pytest
pytest -s
z ed
git checkout dev
git pull
ddev robo local:update ed.local
z 3ed
z ed
git pull
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
z ed
git pull
ddev start
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
sudo rm /usr/local/bin/warpd /usr/local/share/man/man1/warpd.1.gz /Library/LaunchAgents/com.warpd.warpd.plist
git pull
z ed
git pull
ddev robo local:update ed.local
z drupalpractice
ddev start
ddev stop
z ed 
ddev stop
z ed
ddev start
git pull
ddev start
z ed
git pull
ddev robo local:update ed.local
z ed 
git pull
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
z ef
z ed
git pull
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
z ed 
git pull
ddev robo local:update ed.local
z ed 
git pull
ddev robo local:update ed.local
z ed
ddev start
z ed
git checkout dev
git pull 
ddev robo local:update ed.local
git pull\\

ddev robo local:update ed.local
ddev drush pmu module_name
git pull
ddev start
ddev robo project:init
ddev stop
ddev delete --omit-snapshot
cd ..
rm -r ./ed-gov
git clone mobomo/ed-gov
git clone https://git.com/mobomo/ed-gov
ls
rm -r ./ed-gov
ls
rm -r ./ed-gov
open
open. 
open .
git clone https://git.com/mobomo/ed-gov
z ed
cd ..
ls
cd ed-gov
ddev start
ddev robo project:init
git pull
ddev robo project:init
ld
ls
ddev robo project:init
ddev stop
ddev start
ddev robo project:init
ddev robo project:init ed.local basic
history | grep robo
ddev robo project:init ed.local basic
ddev robo project:init
ddev import-db --target-db=ed --src=~/Downloads/ed_2023-05-16.sql
open .
ddev robo update:local ed.local
ddev composer install
ddev robo update:local ed.local
ddev robo local:update ed.local
history | grep solr
ddev drush @ed.local search-api-solr:upload-configset ed 1
ddev drush @ed.local search-api-solr:upload-configset ed-gov 1
ddev drush @ed.local search-api-solr:upload-configset ed-gov
ddev drush @ed.local search-api-solr:upload-configset ed
ddev drush @ed.local search-api-solr:upload-configset ed 1
history | grep admin
ddev drush @ed.local upwd admin --password="admin"
ddev drush @ed.local uli
git pull
ddev robo local:update ed.local
z ed 
ddev drush @ed.local search-api-solr:upload-configset ed 1
ddev drush @ed.local search-api-solr:upload-configset ed 
ddev robo local:update ed.local
ddev drush @ed.local search-api-solr:upload-configset ed 
z ed
ddev restart
ddev drush @ed.local search-api-solr:upload-configset ed 1
z ed
ddev robo local:update ed.local
z ed
git pull
history | grep config
ddev drush @ed.local search-api-solr:upload-configset ed 1
ddev descrive
ddev describe
z ed
ddev stop
ddev start
ddev describe
ddev import-db --target-db=ed --src=~/Downloads/ed_2023-05-16.sql
ddev robo local:update ed.local
z ed
git pull 
ddev robo local:update ed.local
git pulll
git pull
z ed
git pull
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
z ed
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
z ed
git pull 
ddev robo local:update ed.local
z ec
z ed
git pull
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
z ed
ddev robo local:update ed.local
z ed 
git pull
ddev robo local:update ed.local
git pull
z ed
git pull
ddev robo local:update ed.local
z ed
git pull 
ddev robo local:update ed.local
z ed 
git pull
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
z ed 
git pull 
ddev robo local:update ed.local;
z ed
git pull
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
z ed
git pull
z ed
git pull
ddev robo local:update ed.local
z ed 
git pull
ddev robo local:update ed.local
z ed 
git pull 
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
git checkout dev
git pull
ddev robo local:update ed.local
z ed
git pulll
git pull
ddev robo local:update ed.local
z e
z ed
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
z ed 
git pull
z ed
git pull
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
z ed 
git pull
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
z ed
cd tests
nvim
pytest -s
python --version
brew install python3
python --version
brew install pyenv
pyenv version
pyenv install latest
pyenv install 3.7.3
pyenv global 3.7.3 
pyenv -h
pyenv latest
pyenv gloabal
pyenv global
pyenv install latest
pyenv install
pyenv install -l
pyenv install 3.12.0
pyenv global 3.12.0
python --version
pyenv 
pyenv global
reboot
sudo reboot
pytest --version
python --version
pyevn version
pyenv version
python -V
pyenv global 3.12.0
pyenv version
python -V
history | grep py
alias brew='env PATH="${PATH//$(pyenv root)\/shims:/}" brew'
python -V
pyenv version
alias brew='env PATH="${PATH//$(pyenv root)\/shims:/}" brew'
python -V
echo 'export PYENV_ROOT="$HOME/.pyenv"' >> ~/.zshrc\
echo 'command -v pyenv >/dev/null || export PATH="$PYENV_ROOT/bin:$PATH"' >> ~/.zshrc\
echo 'eval "$(pyenv init -)"' >> ~/.zshrc
sudop
sudo
sudo echo 'export PYENV_ROOT="$HOME/.pyenv"' >> ~/.zshrc\
echo 'command -v pyenv >/dev/null || export PATH="$PYENV_ROOT/bin:$PATH"' >> ~/.zshrc\
echo 'eval "$(pyenv init -)"' >> ~/.zshrc
c d/
cat .zshrc
nvim .zshrc
eval "$(pyenv init -)"
python -V
nvim .zshrc
z ed
ddev start
git pull
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
git checkout dev
git pulll
git pull
ddev robo local:update ed.local
git pull
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
z ed 
git pull
z ed
git pull
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
z edtg
z ed
git pull
ddev robo local:update ed.local
git pull
ddev robo local:update ed.local
git pull
ddev robo local:update ed.local
z ed
git pul
git pull
ddev robo local:update ed.local
cat .skhdrc
????hi
history | grep skhd
skhd
skhd -help
skhd --help
skhd -V
stop skhd
brew services stop skhd
skhd -V
brew services stop yabai
yabai
brew services start skhd
brew upgrade
brew services start yabai
history | grep yabai
brew services start yabai
brew upgrade yabai
brew services start yabai
sudo nvram boot-args=arm64e_preview_abi
sudo reboot
csrutil status
yabai --stop-service
brew upgrade yabai
yabai --start-service
brew status
brew services status
brew services
brew services info
skhd
yabai
yabai --start-service
cat .skhdrc
z ed
git pull
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
ddev start
git pull
ddev robo local:update ed.local
ssh nmccloskey@192.168.0.117
ssh nmccloskey@192.168.0.105
ssh nmccloskey@192.168.0.113
ls
cd Downloads
ls
scp nmccloskey@192.168.0.113 ./TrueNAS-13.0-U5.3.iso
scp nmccloskey@192.168.0.113:~/Downloads ./TrueNAS-13.0-U5.3.iso


scp ./Downloads/TrueNAS-13.0-U5.3.iso nmccloskey@192.168.0.113:~/Downloads/TrueNAS-130-U5.3.iso
ssh nmccloskey@192.168.0.113
ping 192.168.0.113
ssh nmccloskey@192.168.0.113
z ed
cd tests
pytest -s
python -V
eval "$(pyenv init -)"
python -V
pytest -s
python -V
brew remove python
python -V
pyenv versons
pyenv
pyenv uninstall
pyenv versions
pyenv uninstall 2.7.18
pytest -s
brew unistall python2.7
brew remove python2.17
brew remove python2.7
@path
@PATH
$PATH
nvim $PATH
nvim /etc/paths
which python
$PATH
ls -a ~/
cat ~/.bashrc
cat ~/.xprofile
cat ~/.zprofile
nvim ~/.zprofile
exec "$SHELL"
python -V
pytest
pytest -v
python -V
z ed
git pull
git changes
git --help
git log
git diff
git pull
git push
ls
git pull
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
git pull
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
z ed 
git pull
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
z ed
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
z ed
git pull
z ed
git pull
ddev robo local:update ed.local
z ed
git pull
z ed
git pull
git push
z ed
git pull
ddev robo local:update ed.local
git checkout dev
git pull
ddev robo local:update ed.local
ssh nmccloskey@192.168.0.113
ssh -X nmcloskey@192.168.0.113
ssh -X nmccloskey@192.168.0.113
ssh nmccloskey@192.168.0.113
z ed 
git pull
ddev robo local:update ed.local
z ~
cat .skhdrc
z ed
git checkout setup-testing-for-pipeline
git push
pytest -s
pip install yaml
pip install pyyaml
pip install --upgrade pip
pytest -s
z ed
git pull
ddev robo local:update ed.local
z ed
git chekcout dev
git checkout dev
git pull
ddev robo local:update ed.local
brew install --cask background-music
cd /Applications/background\ Music.app/Contents/Resources/
bash uninstall.sh
brew install --cask background-music
ls
brew install --cask background-music
bre remove background-music
brew remove background-music
brew install --cask background-music
z ed
git pull
ddev robo local:update ed.local
z ed
git checkout setup-testing-for-pipeline
pytest -s
pip install pyyaml
pytest -s
python3 pytest -s
pip3 install pytest
python3 pytest -s
pytest -v
pytest -version
pytest --version
pytest -s
pip install pyyaml
pytest -s
python -m venv
pyenv
python3 -m pip install pyyaml
python3 pytest -s
python3 pip install pytest
pyenv
pyenv global
pyenv local
pyenv versions
whihc python
pip freeze
pip uninstall PyYaml
pip uninstall pytest
which pip
pip
pip show
ppip -V
pip -V
pip install pytest
which pytest
pytest -s
pip instal pyyaml
pip install pyyaml
pytest -s
whihc pyyaml
which pyyaml
pip freeze
pytho --version
python --version
pip --version
which pytest
cd tests
pytest
pip isntall -g pyyaml
pip install -g pyyaml
pytest --version
whihc pytest
pip uninstall pytest
pipenv shell
pip install pipenv
pipenv shell
pip install pytest
pytest -s\\

pip install pyyaml
pytest -s
pip install -r ./requirements.txt
pytest -s
exit
pip uninstall pytest
pip3 uninstall pytest
pipenv shell
pip install pytest
pip3 install pyyaml
python
ls
pytest
pytest -s
z ed
git checkout dev
git pull
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
git pull
ddev robo local:update ed.local
z ed
git checkout dev
git pull
ddev robo local:update ed.local
z ed
git pull 
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
z ed
git checkout setup-testing-for-pipeline
ddev start
z ed
git pull
git checkout dev
git pull
ddev robo local:update ed.local
z ed
git pull
z ed
ddev robo local:update ed.local
z ed
git pul
git pull
z ed
git pull 
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
ssh root@192.168.0.115
z ed
git pull
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
brew install switchaudio-osx
SwitchAudioSource -a
osascript -e 'test'
osascript -e 'tell app "Finder" to display dialog "hey!"'
brew install terminal-notifier
echo 'test' | terminal-notifier -sound default
terminal-notifier -message 'test'
$ terminal-notifier -title ProjectX -subtitle "new tag detected" -message "Finished" -appIcon http://vjeantet.fr/images/logo.png
$ terminal-notifier -title ProjectX -subtitle "new tag detected" -message "Finished" -appIcon http://vjeantet.fr/images/logo.png$ terminal-notifier -title ProjectX -subtitle "new tag detected" -message "Finished" -appIcon http://vjeantet.fr/images/logo.png
terminal-notifier -title ProjectX -subtitle "new tag detected" -message "Finished" -appIcon http://vjeantet.fr/images/logo.png
brew remove terminal-notifier
brew install terminal-notifier
terminal-notifier -message 'test'
terminal-notifier
terminal-notifier -message 'test'
echo 'test' | terminal-notifier -sound default
terminal-notifier.app
osascript -e 'display notification "Hello World!"\
'
osascript -e 'display notification "Hello World!"'\
'\
\
'
osascript -e 'display notification "Hello World!"'
osascript -e 'display notification "Hello World!"'\\

whick SwitchAudioSource
which SwitchAudioSource
SwitchAudioSource -a
switchaudiosource
SwitchAudioSource -n
SwitchAudioSource -c
which SwitchAudioSource
s
SwitchAudioSource -s "LG HDR 4k"
SwitchAudioSource -s LG HDR 4k
SwitchAudioSource -u "LG HDR 4k"
SwitchAudioSource -c
SwitchAudioSource -i "LG HDR 4k"
SwitchAudioSource -f cli pa
SwitchAudioSource -f cli -a
switchaudiosource -n\\

switchaudiosource -s "Backgournd Music"\

switchaudiosource -s "Background Music"\

switchaudiosource -s "LG HDR 4k"
SwitchAudioSource -n
swithcaudiosource
SwitchAudioSource
SwitchAudioSource -n
SwitchAudioSource -s "USB PnP Audio Device"
SwitchAudioSource -f cli -a
SwitchAudioSource -i 133
SwitchAudioSource -i 108
SwitchAudioSource -c -f cli
SwitchAudioSource -c -f json
nvim .skhdrc
osascript ~/Applications/toggleAudiSink.scpt
cd Applications
ls
open .
osascript ~/Applications/toggleAudiSink.scpt
osascript ~/Applications/toggleAudioSink.scpt
osascript ~/Applications/toggleAudioSInk.scpt
ls
osascript ./toggleAudioSink
osascript ~/Applications/toggleAudioSink
osascript -e 'display notification "Hello World!"'\\

which osascript
exit
exit
z ed
ddev robo local:update ed.local
ddev drush pm-uninstall "Ed Test Seeds"
ddev drush @ed.local  pm-uninstall "Ed Test Seeds"
ddev drush
history | grep drush
ddev drush @ed.local pm
ddev drush @ed.local pm:list
ddev drush @ed.local pm:uninstall ed_test_seeds
ddev drush @ed.local pm:install ed_test_seeds
history | grep @ed.local
ddev drush @ed.local pm:uninstall ed_test_seeds && ddev drush @ed.local pm:install ed_test_seeds
cd Applications
open
ls
nvim toggleAudioSink
open .
z ed
drush devel:services
ddev drush @ed.local drush devel:services
ddev drush @ed.local devel:services
ddev drush @ed.local devel:services | grep yaml
ddev drush @ed.local devel:services | grep entity
ddev drush @ed.local devel:services | grep media
ddev drush @ed.local devel:services | grep file
ddev drush @ed.local pm:uninstall ed_test_seeds && ddev drush @ed.local pm:install ed_test_seeds
ddev drush @ed.local pm:install ed_test_seeds
ddev drush @ed.local pm:uninstall ed_test_seeds && ddev drush @ed.local pm:install ed_test_seeds
ddev drush @ed.local devel:services | grep yaml
ddev drush @ed.local pm:uninstall ed_test_seeds && ddev drush @ed.local pm:install ed_test_seeds
ddev drush @ed.local devel:services | grep json
nvim
cd ~/.config/karabiner/assets/
ls
cd complex_modifications
ls
open .
nvim
nvin
nvim
open
open .
z ed
nvim
git switch dev
git pull
ddev robo local:update ed.local
git checkout dev
git pull
ddev robo local:update ed.local
ddev drush @ed.local pm:uninstall ed_test_seeds
git checkout setup-testing-for-pipeline
ddev drush @ed.local pm:uninstall ed_test_seeds
git checkout dev
ddev robo local:update ed.local
git checkout setup-testing-for-pipeline
nvim
ddev drush @ed.local pm:install ed_test_seeds
git checkout dev
git pull
ls
ls -a
z ed
git pull
ddev drush @ed.local pm:install ed_test_seeds
git checkout set
gc setup-testing-for-pipeline
git checkout setup-testing-for-pipeline
ddev drush @ed.local pm:uninstall ed_test_seeds
git checkout dev
git pull
ddev robo local:update ed.local
z github
ls
cd nixos
nvim
cd ..
cd nixos-config
nvim
cd ..
cd nixos
nvim
cd .. 
cd ed-gov
nvim
git checkout setup-testing-for-pipeline
ddev drush @ed.local pm:install ed_test_seeds
cd ..
cd nixos-config
nvim
ddev drush @ed.local pm:uninstall ed_test_seeds && ddev drush @ed.local pm:install ed_test_seeds
ddev drush @ed.local pm:list | grep para
history | grep drush
ddev drush @ed.local devel:services | grep paragraphs
ddev drush @ed.local devel:services | grep para
ddev drush @ed.local eval "print_r(array_keys(\Drupal::entityTypeManager()->getDefinitions()));"
ddev drush @ed.local devel:services | grep entity
ddev drush @ed.local pm:uninstall ed_test_seeds && ddev drush @ed.local pm:install ed_test_seeds
cd tests
ls
cd src
ls
cd scripts
ls
history | grep create-content.php
ddev drush @ed.local php:script tests/src/scripts/create-content.php -- content/content-types/press-release.yml 50
ddev drush @ed.local php:script tests/src/scripts/cleanup-content.php
nvim
history | grep qmk
qmk list-keyboards
z gi
z git
git clone https://github.com/Keychron/qmk_configurator.git
cd qmk_configurator
nvm use
yarn install
nvim .s
nvim .skhdrc
exit
z ed
ddev drush @ed.local pm:uninstall ed_test_seeds
git checkout dev
git pull 
ddev robo local:update ed.local
git pull
ddev robo local:update ed.local
nvim .skhdrc
cd ~
nvim .skhdrc
yobai -m space 1
yabai -m space 1
yabai -m space 1 focus
yabai -m space 2
yabai -m space 2 --focus
yabai -m space '2' --focus
yabai -m space --focus 2
yabai -m space --focus 3
csrutil status
sudo yabai --install-sa
sudo yabai --uninstall-sa
suod yabai --install-sa
sudo yabai --install-sa
sudo yabai --load-sa
yabai -m space --focus 3
sudo visudo -f /private/etc/sudoers.d/yabai
shasum -a 256 $(which yabai)
nvim .yabairc
yabai --load-sa
sudo yabai --load-sa
csrutil status
sudo visudo -f /private/etc/sudoers.d/yabai
shasum -a 256 $(which yabai)
sudo yabai --load-sa
brew upgrade yabai
yabai --load-sa
sudo yabai --load-sa
yabai space --focus 2
yabai -m space --focus 3
sudo yabai --uninstall-sa && sudo yabai --install-sa
brew install yabai --head
brew unlink yabai
brew install yabai --head
sudo yabai --uninstall-sa && sudo yabai --install-sa
yabal -v
yabai -v
sudo yabai --load-sa
yabai -m space --focus 3
brew install yabai --head
reboot
yabai
yabai -m space --focus 3
brew services list
brew services info
history | grep yabai
brew services start yabai
yabai
history | grep brew
brew services info
brew services list
brew services start skhd
skhd
yabai --start-service
yabai --stop-service
brew upgrade yabai
yabai --start-service
yabai --stop-service
brew remove yabai
brew uninstall --force yabai
brew install yabai
yabai --start-service
yabai -m space --focus 3
sudo yabai --load-sa
nvram boot-args=-arm64e_preview_abi
sudo nvram boot-args=-arm64e_preview_abi
sudo yabai --load-sa
reboot
sudo reboot
sudo yabai --load-sa
yabai -m space --focus 3
nvim .yabairc
nvim .skhdrc
z ed
git pull
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
git checkout setup-testing-for-pipeline
git update
git merge dev
nvim
ddev drush @ed.local pm:install ed_test_seeds
history | grep pytest
pytest -k test_url_alias
histoyr | grep pyenv
history | grep py
pyenv
history
pipenv shell
pytest -k test_url_alias
history | grep pipenv
pip install pyyaml
pytest -k test_url_alias
pip uninstall pytest
pipenv shell
pip install pytest
pytest -k test_url_alias
pip install pyyaml
python
yaml
whic pyyaml
which pyyaml
pip show pyyaml
pip show pytest
pip install -r ./requirements.txt
cd tests
pip install -r ./requirements.txt
pytest -k test_url_alias
exit
exit
nvim
pytest -k test_url_alias
PYTHONPATH=. pytest
pytest -k test_url_alias
cd src
cd scenarios
pytest -k test_url_alias
cd ..
pytest -k test_url_alias
python -m pytest 
pytest -k test_url_alias
cd ..
pytest -k test_url_alias
pytest
cd src
pytest
python -m pytest 
cd ..
pythom -m pytest -k test_url_alias
python -m pytest -k test_url_aliaz
python -m pytest -k test_url_alias
pytest
pytest -k test_url_alias
cd scenarios
pytest -k test_url_alias
pythom -m pytest -k test_url_alias
python -m pytest -k test_url_alias
pythom -m pytest -k test_url_alias
python -m pytest -k test_url_alias
pytest -k test_url_alias
ls
pytest -k test_url_alias
python -m pytest -k test_url_alias
pytest -k test_url_alias
pip install pyyaml
pytest -k test_url_alias
python -m pip install pyyaml
python -m pytest -k test_url_alias
pytest -k test_url_alias
PYTHONPATH=. pytest
pytest -k test_url_alias
clear
pytest -k test_url_alias
pytest --markers
clear
pytest --markers
pytest -k test_url_alias
git checkout dev
git reset --soft origin/dev
exit
ddev robo local:update ed.local
python -versio0n
python -version
python -v
pyenv
pip selenium -v
pip show selenium
z ed
pipenv shell
pip show selenium
pytest -k test_url_alias
nvim
pytest -k test_url_alias
yabai -m space --focus 3
sudo yabai --load-sa
z ed
nvim
pytest -k test_url_alias
pipenv shell
pytest -k test_url_alias
ddev start
pytest -k test_url_alias
ddev drush @ed.local pm:install ed_test_seeds
pytest -k test_url_alias
z ed
nvim
ddev start
suod yabai --install-sa
sudo yabai --load-sa
pipenv shell
pytest -s
pytest -k test_url_alias
pytest -s
pytest -k test_media_is_limited
pytest -lf
pytest --lf
exit
exit
exit
nvim .skhdrc
exit
nvim .skhdrc
brew install aerc
aerc
z ed
git pull
ddev robo local:update ed.local
sudo yabai --load-sa
z ed
nvim
pipenv shell
pytest -k test_regression
ddev drush @ed.local pm:install ed_test_seeds
pytest -k test_regression
open .
pytest -k test_regression
pytest -k POC_contributor_cannot
open .
git pull[
git pull
z ed
nvim
pipenv shell
pytest -s
pytest -lf
pytest --lf
pytest -k test_regression
pytest --lf
pytest
pytest -k admin_forms_regression
pytest --lf
pytest -k url_alias
open .
pytest -k url_alias
pytest -k test_regression
open .
pytest --lf
pytest -k test_regression[content/paragraphs/image-left.yml]
pytest -k test_regression
ddev drush @ed.local pm:uninstall ed_test_seeds && ddev drush @ed.local pm:install ed_test_seeds
ddev drush @ed.local devel:services | grep route
ddev drush @ed.local pm:uninstall ed_test_seeds && ddev drush @ed.local pm:install ed_test_seeds
ddev drush @ed.local devel:services | grep rout
ddev drush @ed.local pm:uninstall ed_test_seeds && ddev drush @ed.local pm:install ed_test_seeds
ddev drush @ed.local pm:uninstall ed_test_seeds &&& ddev drush @ed.local pm:install ed_test_seeds
ddev drush @ed.local pm:uninstall ed_test_seeds & ddev drush @ed.local pm:install ed_test_seeds
ddev drush @ed.local pm:uninstall ed_test_seeds && ddev drush @ed.local pm:install ed_test_seeds
ddev drush @ed.local pm:uninstall ed_test_seeds & ddev drush @ed.local pm:install ed_test_seeds
ddev drush @ed.local pm:uninstall ed_test_seeds && ddev drush @ed.local pm:install ed_test_seeds
ddev drush @ed.local pm:install ed_test_seeds
ddev drush @ed.local pm:uninstall ed_test_seeds && ddev drush @ed.local pm:install ed_test_seeds
exit
nvim
ddev drush @ed.local devel:services | grep query
ddev drush @ed.local devel:services | grep request
ddev drush @ed.local pm:uninstall ed_test_seeds && ddev drush @ed.local pm:install ed_test_seeds
pytest -k test_url_alias
pipenv shell
pytest -k test_url_alias
exit
exit
z ed
git pull
ddev start
pipenv shell
pytest -k test_url_alias
nvim
pytest -k test_url_alias
sudo yabai --load-sa
pytest -k test_url_alias
pytest
pytest -k admin_forms_regression
pytest -k test_regression
pytest -k test_url_alias
pytest -k test_regression
open
ope .
open .
pytest -k test_regression
nvim
pytest -k test_regression
pytest 
z ~
nvim
which checkModifierKeys
/Users/nmccloskey/Downloads/checkModifierKeys; exit
/Users/nmccloskey/Downloads/checkModifierKeys ; exit;
cd ~/opt/
ls
cd Applications
open
open .
cd ..
nvim .skhdrc
oascript ~/Applications/pushToTalk
/usr/bin/osascript ~/Applications/pushToTalk
cd Applications
ls
/usr/bin/osascript ~/Applications/pushToTalk.scpt
cd Applications
ls
cd ~
nvim .skhdrc
cd ~/Applications
open .
/Applications/checkModifierKeys ; exit;
ls -a
ls
ls -k
chmod +x checkModifierKeys
./checkModifierKeys
bash ./checkModifierKeys
./checkModifierKeys
exec ./checkModifierKeys
exec ~/Applicatons/checkModifierKeys shift
open .
/Applications/checkModifierKeys ; exit;
osascript ./checkModKeys.scpt
which osascript
ls
cd Applications
open .
swithcAudio
swtichAudioSource
SwitchAudioSource
SwitchAudioSource -m
SwitchAudioSource -ct 
SwitchAudioSource -c -t input
SwitchAudioSource -a -t input
SwitchAudioSource -a -f json -t input
SwitchAudioSource -t input -s "TGAU PnP USB Microphone"
SwitchAudioSource -t input -s "TKGOU PnP USB Microphone"
SwitchAudioSource -m toggle
SwitchAudioSource -m toggle -t input
z ed
nvim
git pull
pipenv shell
pytest
nvim
exit
exit
z ed
nvim
z ed
git checkout dev
git pull
ddev robo local:update ed.local
git checkout setup-testing-for-pipeline
ddev drush @ed.local pm:uninstall ed_test_seeds
git checkout dev
git pull
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
ficonfig
ifconfig
ipconfig
ifconfig
ipconfig
ifconfig
z ed
git pull
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
ddev drush @ed.local pm:install ed_test_seeds
pipenv shell
pytest
z ed
ddev start
sudo yabai --load-sa
pipenv shell
pytest
open .
\
/Users/nmccloskey/.zshenv:source:15: no such file or directory: /Users/nmccloskey/.config/op/plugins.sh\
‚É¥É¨‚É¥Ä(~)‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä‚É¥Ä(nmccloskey@nmcc-laptop:s000)‚É¥Ä‚É¥É∞\
‚É¥É¥‚É¥Ä(16:29:13)‚É¥Ä‚É¥Ä>                                                                                                                                                                                                                                                                                                                                           ‚É¥Ä‚É¥Ä(Tue,Dec12)‚É¥Ä‚É¥É∏\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\

sudo yabai --load-sa
ping google.com
sudo yabai --load-sa
ssh nmccloskey@192.168.0.112
ssh-keyscan -H 192.168.0.112 >> ~/.ssh/known_hosts
ssh nmccloskey@192.168.0.112
ssh nmccloskey@192.168.0.116
ssh ubuntu@192.168.1.121
ssh ubuntu@192.168.0.121
ssh ubuntu@192.168.0.117
pin 192.168.0.121
ping 192.168.0.121
ssh ubuntu@192.168.0.121
ping 192.168.0.121
ssh ubuntu@192.168.0.121
ping 192.168.0.121
ssh ubuntu@192.168.0.121
ping 192.168.0.121
ssh ubuntu@192.168.0.121
ping 192.168.0.121
ssh ubuntu@192.168.0.121
ssh nmccloskey@192.168.0.112
ssh nmccloskey@192.168.0.113
exit
ssh nmccloskey@192.168.0.113
ssh ubuntu@192.168.0.121
ping 192.168.0.121
ssh ubuntu@192.168.0.121
ping 192.168.0.121
ssh ubuntu@192.168.0.116
history | grep known
ssh-keyscan -H 192.168.0.112 >> ~/.ssh/known_hosts
ssh ubuntu@192.168.0.116
ssh-keyscan -H 192.168.0.116 >> ~/.ssh/known_hosts
ssh ubuntu@192.168.0.116
ssh nmccloskey#192.168.0.116
ssh nmccloskey@192.168.0.116
history | grep known
ssh-keyscan -H 192.168.0.116 >> ~/.ssh/known_hosts
ssh nmccloskey@192.168.0.116
ssh nmccloskey@192.168.0.118
ssh nmccloskey@192.168.0.113
ssh nmccloskey@192.168.0.118
ssh nmccloskey@192.168.0.116
ssh nmccloskey@192.168.0.122
ssh nmccloskey@192.168.0.113
ssh nmccloskey@192.168.0.122
exit
z rf
z ed
git pull
ddev robo local:update ed.local
z ed
ddev drush @ed.local pm:install ed_test_seeds
ssh nmccloskey@192.168.0.122
exit
ssh nmccloskey@192.168.0.112
ping google.com
ping 192.168.0.1
mdnsflushcache
sudo discoveryutil mdnsflushcache
ssh nmccloskey@192.168.0.112
history | grep known
ssh-keyscan -H 192.168.0.112 >> ~/.ssh/known_hosts
ssh nmccloskey@192.168.0.112
ssh nmccloskey@192.168.0.118
ssh root@192.168.0.118
ssh root@192.168.0.115
ssh root@192.168.0.112
ssh root@192.168.0.118
ssh nmccloskey@192.168.0.118
z ed
ddev start
z ed
git pull
ddev robo local:update ed.local
z ed
ddev drush @ed.local pm:install ed_test_seeds
sudo yabai --load-sa
z ed
nvm
nvim
z ed
open .
z ed
nvim
ddev robo local:update ed.local
ddev drush @ed.local pm:install ed_test_seeds
nvim
exit
z ed
nvim
pipenv shell
pytest
ddev start
pytest
pytest -k test_adminLogin
pytest -k test_visitAccount
pytest -k test_visitAccount --browser="chrome"
pytest -k test_visitAccount
pytest -k test_visitAccount -q --browser="chrome"
pytest -q --browser="chrome"
cd tests
pytest -q --browser="chrome"
sudo yabai --load-sa
.zsh
cd ~
nvim .zshrc
nvim .yabairc
sud nvim /private/etc/sudoers.d/yabai
sudo nvim /private/etc/sudoers.d/yabai
whoami
shasum -a 256 $(which yabai)
sudo yabai --load-sa
cd ~/Applications
open .
SwitchAudioSource -h
SwitchAudioSource -a -t input
SwitchAudioSource -c -t input
SwitchAudioSource -c -t input -m toggle
SwitchAudioSource -c -t input -m unmute
SwitchAudioSource -c -t input -m toggle
z ~
nvim .skhdrc
osascript ~/Applications/pushToTalk
cd ~/Applications
ls
osascript ~/Applications/pushToTalk
ls
osascript ./pushToTalk
open .
osascript ./pushToTalk
ls
osascript ./pushToTalk.scpt
nvim .skhdrc
osascript ./pushToTalk.scpt
osascript ~/Applications/pushToTalk
osascript ./pushToTalk.scpt
/opt/homebrew/bin/SwitchAudioSource -c -t input -m toggle
osascript ./pushToTalk.scpt
z /Users/nmccloskey/Applications
ls
osascript ./pushToTalk.scpt
nvim .skhdrc
exit
nvim .skhdrc
z ed
nvim
git checkout dev
git pull
ddev robo local:update ed.local
z ed
pipenv shell
pytest -q --browser="chrome"
nvim
pytest --help
pytest --browser
cd tests/src
pytest --browser
pytest --browser="test"
pytest --browser="test" -k test_visitAccountPage
pytest -k test_visitAccount
pytest -s -k test_visitAccount
pytest -s -k test_visitAccount --host="https://google.com"
history | grep pip
history | grep pytest
z ed
git checkout dev
git pul
git pull
ddev robo local:update ed.local
z ed
git pull
ping 192.168.0.120
ping 192.168.0.127
ping 192.168.0.120
ifconfig
ip address
ssh nmccloskey@192.168.0.101
z /Users/nmccloskey/Downloads
ls
bunzip2 OPNsense-23.7-dvd-amd64.iso.bz2
nvim .skhdrc
exit
z ed
git pull
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
cd ~
nvim .skhdrc
cd Downloads
open .
cd ~/Downloads
ls
cd ~/Applications
open .
oascript ./toggleAudioSink
osascript ./toggleAudioSink
SwitchAudioSource
SwitchAudioSource -a
SwitchAudioSource -f json -a
exit
z ed
git pull 
ddev robo local:update ed.local
z ed 
git pull 
ddev robo local:update ed.local
z ed
git pul
git pull
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
git pull
ddev robo local:update ed.local
z ed 
git pull
ddev robo local:update ed.local
git pull
ddev robo local:update ed.local
z ed
ddev start
git pull
ddev robo local:update ed.local
sudo yabai --load-sa
yabai -m space --focus 3
yabai -m space --focus 1
yabai -m space --focus 2
z ed
git branches
git branc h
git branch
git checkout setup-testing-for-pipeline
nvim
pipenv shell
pytest -k test_sidebar_link_disabled
pytest -k test_sidebar_link_disabled --headless=false
cd tests/src
pytest -k test_sidebar_link_disabled --headless=false
pytest -k test_sidebar_link_disabled --headless=False
pytest -k test_sidebar_link_disabled --headless
pytest -k test_sidebar_link_disabled --headless false
pytest -k test_sidebar_link_disabled --headless 0
pytest -k test_sidebar_link_disabled --no_headless
/opt/homebrew/bin/nvim '/Users/nmccloskey/Documents/GitHub/ed-gov/Pipfile' 
pytest -k test_sidebar_link_disabled
pytest -s -k test_sidebar_link_disabled
cat .skhdrc
pytest -s -k test_sidebar_link_disabled
z ed
dde start
ddev start
cd tests
nvim
cd src
pytest -s -k test_sidebar_link_disabled
pipenv shell
pytest -s -k test_sidebar_link_disabled
cd src
pytest -s -k test_sidebar_link_disabled
nvim
exitg
exit
exit
z ed
git checkout dev
git pull
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
nvim
git checkout dev
git pull
ddev robo local:update ed.local
cd ..
git clone https://github.com/toniz4/PseudoMakeMeKeyCapProfiles.git
cd ~
cd Documents
mkdir OpenSCAD
cd OpenSCAD
mkdir libraries
z ed
git pull
ddev robo local:update ed.local
z ed
git branch
nvim
exit
z ed
git pull
git checkout dev
git pull
ddev robo local:update ed.local
z ed
git pull
ping 192.168.0.120
z ed
git pull
ddev robo local:update ed.local
z ed
git pull
git branch
cd tests
cd src
cd ..
nvim
z ed
cd tests
nvim
exit
z ed
git pul
git pull
git checkout dev
git pull
ddev robo local:update ed.local
git pull
ddev robo local:update ed.local
cat .skhdrc
z ed
git pull
ddev robo local:update ed.local
git pull
z ed
git pull
ddev robo local:update ed.local
z GitHub
git clone https://github.com/Bastardkb/Scylla-PCB-Plate.git
open .
z ed
git pull
ddev robo local:update ed.local
z ed
cd tests
nvim
exit
z ed
git pull
ddev robo local:update ed.local
yabai -m space --focus 2
yabai -m space --focus 3
cd tests
nvim
z ed
git checkout dev
git pull
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
aazzz
az
z ed
ls
wow'\
\
'
tho
this is qqtis is
tis is q teesteeeeeedethieeis q taaaaaatthiserrrereereeethiesthisisiikiieiwwwwwwwwwwwjjjjddddjjjthisisqaaatithis is qthsisatestqqqweqqsq55qiii\i8pikeeeeeeeeeeeeeeeeii888aaaaaaafasaaaaqaqazthis is qq trhis is a test woswowowowowowo wow wo 
thi is a thistesttest ths is q a testi   this is a test this is a test wowowwow owwowaaaaaa;aaaaa
athis is a test   
this
z ed
git pull
ddev robo local:update ed.local
x  sd 
ddev robo local:update ed.local
ls .skhdrc
cat .skhdrc
oascript ./toggleAudioSink
oascript ./Applications/toggleAudioSink
history | grep script
osascript ./Applications/toggleAudioSink
hitory | grep sink
history | grep sink
history | grep Sink
cd ./Applications
open .
SwitchAudioSource -f json -a
osascript ./Applications/toggleAudioSink
osascript ~/Applications/toggleAudioSink
cat .skhdrc
history | grep qmk
qmk list-keyboards
qmk list-keyboards | grep bastard
z github
git clone https://github.com/Bastardkb/bastardkb-qmk.git
cd bastardkb-qmk
l
gig checkout origin/bkb-master
git checkout origin/bkb-master
qmk compile -kb bastardkb/charybdis/4x6/v2/splinky_3
qmk compile -kb bastardkb/charybdis/4x6/v2/splinky_3 -km via
qmk compile -kb bastardkb/charybdis/4x6/v2/splinky_3 -km default
qmk config user.keyboard=bastardkb/charybdis/4x6/v2/splinky_3
qmk config user.keymap=rudamendary99
qmk new-keymap
ls
cd ~
ls
qmk new-keymap
z 4x6
cd /Users/nmccloskey/qmk_firmware/keyboards/bastardkb/charybdis/4x6/keymaps/rudamendary99
ls
nvim keymap.c
ls
cd ..
ls
cd via
ls
cd ..
qmk config user.keyboard=bastardkb/charybdis/4x6/v2/splinky_3/via
qmk new-keymap
cd via
ls
nvim config.h
cat readme.md
ls
cat rules.mk
cp config.h ../rudamendary99
cp rules.mk ../rudamendary99
cd ../rudamendary99
ls
rm keymap.c
cp keymap.c ../rudamendary99
ls
exit
nvim
qmk compile 
qmk config user.keyboard=bastardkb/charybdis/4x6/v2/splinky_3
qmk compile
cd ..
nvim
qmk compile
open .
qmk flash
exit
exit
exit
z rudamentary99
history
cd /Users/nmccloskey/qmk_firmware/keyboards/bastardkb/charybdis/4x6/keymaps/rudamendary99
ls
nvim
ls
nvim config.h
exit
z ed
git pull
ddev robo local:update ed.local
history
cd /Users/nmccloskey/qmk_firmware/keyboards/bastardkb/charybdis/4x6/keymaps/rudamendary99
ls
nvim config.h
z ed
git pull
ddev robo local:update ed.local
exit
z ed
git pull
ddev robo local:update ed.local
nvim
n
z ed
nvim
ls
nvim home-guide.txt
cat .skhdrc
z rudamentary99
cd /Users/nmccloskey/qmk_firmware/keyboards/bastardkb/charybdis/4x6/keymaps/rudamendary99
ls
nvim config.h
cd ..
ls
cd ..
ls
cd ..
ls
cd ..
ls
nvim info.json
qmk compile
cd ~
nvim .skhdrc
qmk compile
qmk flash
qmk compile
qmk flash
qmk compile
qmk flash
cd /Users/nmccloskey/qmk_firmware/keyboards/bastardkb/charybdis/4x6/keymaps/rudamendary99
nvim keymap.c
qmk compile
qmk flash
qmk compile
qmk flash
ls
nvim keymap.c
qmk compile
qmk flash
cd /Users/nmccloskey/qmk_firmware/keyboards/bastardkb/charybdis/4x6/keymaps/rudamendary99
ls
cd ..
ls
cd via
nvim keymap.c
history | grep default
qmk flash -kb bastardkb/charybdis/4x6/v2/splinky_3 -km via
cd ..
ls
nvim config.h
qmk flash
qmk flash -kb bastardkb/charybdis/4x6/v2/splinky_3 -km rudamentary99
history | grep qmk
open .
qmk new keymap
qmk new-keymap
qmk user.keymap=rudamentary99
qmk config user.keymap=rudamentary99
qmk new-keymap
qmk new-keymap test
qmk new-keymap -km test
qmk new-keymap -km rudamentary99
qmk new-keymap
qmk flash
qmk compiler
qmk compile
qmk flash
cd ~
cat .skhdrc
qmk compile
qmk flash
qmk compile
qmk flash
qmk compile
qmk flash
qmk compile
qmk flash
qmk compile
qmk flash
qmk compile
qmk flash
exit
z ed
git pull
ddev robo local:update ed.local
z ed 
git pull 
ddev robo local:update ed.local
nvim .skhdrc
exit
z ed
git pull
ddev robo local:update ed.local
cat .skhdrc
z qmk_firmware
z rudamentary99
ls
z charybdis
ls
cd 4x6
ls
cd keymaps
cd rudamentary99
nvim keymap.c
cd ../..
ce ..
cd ..
ls 
nvim charybdis.c
exit
z rudamentary99
nvim keymap.c
qmk compile
qmk flash 
cd ../..
nvim config.h
cd ../../
cd ../
nvim config.h
qmk compile
qmk flash
nnnnnnnnnnnnnnnnnnnnnn
qmk flash
qmk compile
qmk flash
0
qmk flash
qmk compile
qmk flash
exit
z ed
git pull
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
git pull
z ~
cat .skhdrc
z ed 
git pull 
ddev robo local:update ed.local
git pull
ddev robo local:update ed.local
git pull
ddev robo local:update ed.local
z ed
z components
ls
cd edgov
ls
nvim edgov.theme
curl https://www.radiosawa.com/privacy-policy
z rudamentary99
nvim keymap.c
z ed
git pull
ddev robo local:update ed.local
z ed
git pull
z ed
git pull
ddev robo local:update ed.local
git pull
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
git pull
z ed
git pull
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
z ed
git
gie pull
git pull
ddev robo local:update ed.local
histsory | grep scipt
history | grep script
osascript ./pushToTalk.scpt
z Documents
ls
cd ..
cd Applications
osascript ./pushToTalk.scpt
open .
SwitchAudioSource -c -t input -m toggle
SwitchAudioSource -h
history | grep SwitchAuio
history | grep SwitchAudio
SwitchAudioSource -t input -s "TGAU PnP USB Microphone"
SwitchAudioSource -a -t input
SwitchAudioSource -t input -s "TGKAU PnP USB Microphone"
SwitchAudioSource -t input -s "TKGAU PnP USB Microphone"
SwitchAudioSource -t input -s "TKGOU PnP USB Microphone"
SwitchAudioSource -t input -t "TKGOU PnP USB Microphone" -m toggle
SwitchAudioSource -t input -s "TKGOU PnP USB Microphone" -m toggle
SwitchAudioSource -t input -s 'TKGOU PnP USB Microphonu' -m toggle
z ~
nvim .skhdrc
yobai -m space 1
yabai -m space --focus 3
brew upgrade yabai
brew update
brew upgrade
z ed
git pull
ddev robo local:update ed.local
yabai
history | grep yabai
brew services start yabai
yabai --start-service
cat .skhdrc
z rudamentary99
nvim keymap.c
qmk compile
qmk flash
f  f
qmk compile
qmk flash
exit
z ed
git pull
ddev robo local:update ed.local
z ed
cd ..
ls
open .
cd add-to-notion
ls
nvim manifest.json
z ed
cd ..
npx create-react-app notion-port  --use-npm
ls
notion-port
npm install @material-ui/core
npm install @mui/material @emotion/react @emotion/styled
open .
npm i webpack webpack-cli webpack-dev-server --save-dev
npm i @babel/core babel-loader --save-dev
npm install @babel/preset-env @babel/preset-react --save-dev
z ed
git pull
ddev robo local:update ed.local
npm run build:devff
npm run build:devFf
npm install fs
npm run build:devFf
open .
npm run build:devFf
z ed
git pull
ddev robo local:update ed.local
npm run build:devFf
npm i react-dom/client
npm i react-dom
npm i react-dom/client
npm run build:devFf
z ed
git pull
ddev robo local:update ed.local
composer install
ddev robo local:update ed.local
ddev composer install
ddev robo local:update ed.local
ddev composer require 'drupal/autocomplete_deluxe:^2.0'
ddev robo local:update ed.local
ddev drush chosenplugin
ddev drush @ed.local chosenplugin
open .
history | grep composer
ddev composer install
ddev robo local:update ed.local
z /Users/nmccloskey/Documents/GitHub/notion-port
npm run build:devFf
z ed 
git pull 
ddev robo local:update ed.local
ddev composer install
ddev robo local:update ed.local
history | grep install
ddev composer install
ddev robo local:update ed.local
ddev composer install
ddev robo local:update ed.local
sudo reboot
yabai --start-service
sudo yabai --load-sa
z ed
git pull
ddev composer install
ddev robo local:update ed.local
git pull
ddev composer install
ddev robo local:update ed.local
git pull
ddev robo local:update ed.local
ddev composer install
ddev robo local:update ed.local
composer install
ddev robo local:update ed.local
git pull
ddev composer install
ddev robo local:update ed.local
z ed
ddev robo local:update ed.local
ddev composer install
history | grep project
ddev robo project:init ed.local basic
ddev robo project:init
ddev composer install
ddev robo project:init
history | grep db
ddev db-import --src=~/Downloads/ed-export-2_5_2024.sql
ddev import-db --target-db=ed --src=~/Downloads/ed-export-2_5_2024.sql
git pull
ddev robo project:init
ddev robo local:update ed.local
z ed
history | grep solr
ddev drush @ed.local search-api-solr:upload-configset ed 1
ddev drush @ed.local search-api-solr:upload-configset ed 
ddev drush @ed.local search-api-solr:upload-configset ed 1
ddev drush @ed.local search-api-solr:upload-configset ed-gov 1
ddev drush @ed.local search-api-solr:upload-configset ed-gov
ddev drush @ed.local search-api-solr:upload-configset ed
history | grep describe
ddev describe
ddev launch -m
defaults write -g ApplePressAndHoldEnabled -bool false\
\

z ed
git pull
ddev robo local:update ed.local
git pull
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
git pull
ddev robo local:update ed.local
nvim 
git pull
ddev robo local:update ed.local
ls
open .
git pull
ddev robo local:update ed.local
pipenv shell
pytest -s
sudo yabai --load-sa
z ed
ddev start
pipenv shell
pytest -s
cd tests
pytest -s
cd src
pytest -s
hsitory | grep solr
history | grep solr
ddev drush @ed.local search-api-solr:upload-configset ed 1
ddev drush @ed.local search-api-solr:upload-configset ed
ddev drush @ed.local search-api-solr:upload-configset ed 1
ddev drush @ed.local search-api-solr:upload-configset ed
ddev robo local:update ed.local
ddev describe
ddev drush @ed.local search-api-solr:upload-configset ed
ddev robo local:update ed.local
history | grep pytest
pytest --lf
cd tests
nvim README.md
history | grep pytest
pytest -k test_url_alias
pytest --lf
pytest -k test_taxonomy
pytest -k POC_contributor_cannot
pytest -k POC_contributor_cannot --no_headless
pytest -k POC_contributor_cannot
pytest -s -k POC_contributor_cannot
cd tests
nvim README.md
pytest -s -k POC_contributor_cannot --no_headless
pytest -s -k POC_contributor_cannot
pytest -s -k POC_contributor_cannot --no_headless
z ed
git pull
git checkout dev
git pull
ddev robo local:update ed.local
ddev import-db --target-db=ed --src=~/Downloads/ed-export-2_15_2024.sql
open .
ddev robo local:update ed.local
nvim RoboFile.php
composer install
ddev robo local:update ed.local
git pull
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
sudo yabai --load-sa
z ed
git pull
ddev robo local:update ed.local
cd tests
nvim README.md
exit
z ed
git checkout dev
git pull
ddev robo local:update ed.local
git pull
ddev robo local:update ed.local
z rudamentary99
nvim keymap.c
z ed
git pull
ddev robo local:update ed.local
sudo yabai --load-sa
exit
exit
z rudamentary99
nvim keymap.c
exit
z ed
git pull
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
z ed
git 
git pull
ddev robo local:update ed.local
z ed 
git pull
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
git pull
ddev robo local:update ed.local
z rudamentary99
nvim keymap.c
qmk compile
qmk flash
z ed
git pull
ddev robo local:update ed.local
z ~
nvim .zshrc
sudo nvim .zshrc
cat .zshrc
exit
exit
z ed
ddev export-db
ddev export-db -f ~/Downloads/db.sql.gz
z rudamentary99
nvim keymap.c
z ed 
git pull
ddev robo
ddev robo local:update ed.local
exit
z rudamentary99
nvim keymap.c
z ed
history | grep db
exit
z ed
ddev export-db -f ~/Downloads/db.sql
ddev export-db -f ~/Downloads/db.sql.gz
ddev import-db --target-db=ed --src=~/Downloads/db.sql
ddev robo local:update ed.local
ddev import-db --target-db=ed --src=~/Downloads/ed-export-2_15_2024.sql
ddev robo local:update ed.local
git pull
ddev robo local:update ed.local
ddev import-db --target-db=ed --src=~/Downloads/ed-export-2_15_2024.sql
ddev drush @ed.local cr
ddev robo local:update ed.local
ddev export-db --gzip=false --file L
ddev export-db --gzip=false --file ~/Dowloads/nates_db.sql
ddev export-db --gzip=false --file ~/Downloads/nates_db.sql
ddev import-db --target-db=ed --src=~/Downloads/nates_db.sql
ddev drush @ed.local cr
ddev robo local:update ed.local
ddev import-db --target-db=ed --src=~/Downloads/ed-export-2_15_2024.sql
ddev drush @ed.local cr
ddev robo local:update ed.local
ddev describe
ddev snapshot
ddev snapshot list
ddev start
ddev snapshot list
ddev snapshot -l
ls -a
cd .ddev
ls
open .
ddev drush @ed.local cr
cd ..
ddev robo local:update ed.local
ddev snapshot -n fresh
ddev snapshot -n fixed_homepage
ddev export-db --target-db=ed --file=~/Downloads/test.sql.gz
z Downloads
ddev export-db --target-db=ed --file=~/Downloads/test_db.sql.gz
ddev export-db --target-db=ed --file=test.sql.gz
open .
ddev import-db --database=ed --src=test.sql.gz
ddev robo local:update ed.local
ddev export-db --target-db=ed --file=tesing_db.sql.gz
ddev snapshot -n testing_snapshot
ddev snapshot -l
ddev import-db --database=ed --src=testing_db.sql.gz
ddev import-db --database=ed --file=./tesing_db.sql.gz
ddev robo local:update ed.local
ddev snapshot -n testing_snapshot
ddev snapshot --cleanup
ddev snapshot -n testing_snapshot
ddev export-db --target-db=ed --file=testing_db.sql.gz
z ed
git pull
ddev robo local:update ed.local
exit
z ed
ddev drush @ed.local cr
z ed
git pull
ddev drush @ed.local cr
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
z ed
git pull
git checkout dev
git pull
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
exit
z ed 
git pull
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
ddev composer install
ddev robo local:update ed.local
git pull
composer install
ddev robo local:update ed.local
git pull
ddev compser install
ddev composer install
composer install
ddev robo local:update ed.local
ddev drush @ed.local cr
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
exit
z ed
git pull
ddev robo local:update ed.local
exidt
exit
z ed
git pull
ddev robo local:update ed.local
git pull
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
git pull
ddev robo local:update ed.local
git pull
ddev composer install
ddev robo local:update ed.local
exsit
exit
z ed
git pull
cd tests/src
pipenv shell
pytest -s
cd src
pytest -s
pytest -s -lf
pytest -lf
pytest --help
pytest --lf
open .
pytest
/Users/nmccloskey/.pyenv/versions/3.12.0/bin/python /Users/nmccloskey/.vscode/extensions/ms-python.python-2024.0.1/pythonFiles/printEnvVariablesToFile.py /Users/nmccloskey/.vscode/extensions/ms-python.python-2024.0.1/pythonFiles/deactivate/zsh/envVars.txt
pytest --lf
open .
pytest --lf
pytest -k visual_regression -s
pytest -k visual_regression 
pytest
pytest --lf
pytest -k test_regression
pytest
z ed
cs
git pull
ddev robo local:update ed.local
z ecd
z ec
z ed
git pull
ddev robo local:update ed.local
z ed 
git pull
ddev robo local:update ed.local
exit
z ed
git pull
ddev robo local:update ed.local
z ~
cat .skhdrc
z ed
git pull
ddev robo local:update ed.local
git pulll
git pull
ddev robo local:update ed.local
git pull
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
ping 192.168.0.116
ping 192.168.100.2
z ed
git pull
ddev robo local:update ed.local
git checkout dev
git pull
ddev robo local:update ed.local
git pull
ddev robo local:update ed.local
git pull
ddev robo local:update ed.local
git pull
ddev robo local:update ed.local
hsitory | grep autosuggest
hstory | grep autosuggest
history | grep autosuggest
git pull
ddev robo local:update ed.local
z ed 
git pull
ddev robo local:update ed.local
git pull
ddev robo local:update ed.local
git pull
ddev robo local:update ed.local
git pull
ddev robo local:update ed.local
git checkout dev
git pull
ddev robo local:update ed.local
git pull
ddev robo local:update ed.local
git pull
ddev robo local:update ed.local
z ed 
git pull
ddev robo local:update ed.local
git pull
ddev robo local:update ed.local
git pull
ddev robo local:update ed.local
git pull
ddev robo local:update ed.local
git pull
ddev robo local:update ed.local
git pull
ddev robo local:update ed.local
z ed
ddev robo local:update ed.local
cd tests
ls
nvim requirements.txt
open
open .
exit
z ed
git pull
ddev robo local:update ed.local
z ed
git pull
git checkout dev
git pull
ddev robo local:update ed.local
z ed
ddev robo local:update ed.local
exit
z ed
exit
z ed
ddev robo local:update ed.local
cd tests
nvim
git checkout dev
ddev robo local:update ed.local
git pull
z ed 
git pull
ddev robo local:update ed.local
z ed git pull
git pull
ddev robo local:update ed.local
git pull
ddev robo local:update ed.local
exit
ddev robo local:update ed.local
git pull
ddev robo local:update ed.local
git pull
ddev robo local:update ed.local
git pull
ddev robo local:update ed.local
git pull
ddev robo local:update ed.local
git pull 
ddev robo local:update ed.local
git pull
ddev robo local:update ed.local
ddev drush @ed.local cr
ddev robo local:update ed.local
git pull
ddev robo local:update ed.local
ddev co
ddev composer install
ddev robo local:update ed.local
ddev drush @ed.local cr
ddev robo local:update ed.local
ddev drush @ed.loacal up
ddev drush @ed.local up
ddev drush @ed.local updatedb
ddev drush @ed.local cr
git pull
ddev robo local:update ed.local
ddev composer install
ddev robo local:update ed.local
git checkout dev
git pull
ddev robo local:update ed.local
ddev snapshot -n testing_snapshot
ddev snapshot list
ddev snapshot
ddev snapshot -h
ddev snapshot -l
open
open .
ddev export-db --target-db=ed --file=testing_db.sql.gz
ddev composer install
ddev git pull
git pull
ddev drush @ed.local cr
ddev robo local:update ed.local
git pull
ddev composer install
ddev db-import --src=~/Downloads/testing_db.sql.gz
ddev import-db --database=ed --file=/Downloads/testing_db.sql.gz
ddev import-db --database=ed --file=~/Downloads/testing_db.sql.gz
ddev robo local:update ed.local
ddev import-db --database=ed --file=~/Downloads/testing_db.sql
ddev robo local:update ed.local
git pull
ddev composer install
ddev robo local:update ed.local
ddev drush @ed.local cr
ddev robo local:update ed.local
exit
z ed
git pull
ddev robo local:update ed.local
z ed
hostory | grep solr
history | grep solr
ddev drush @ed.local search-api-solr:upload-configset ed
ddev describe
ddev launch -m
git pull
ddev robo local:update ed.local
ddev describe
git p
git pull
ddev describe
ddev robo local:update ed.local
ddev drush @ed.local search-api-solr:upload-configset ed 1
ddev drush @ed.local search-api-solr:upload-configset ed 
ddev start
ddev import-db --database=ed --file=~/Downloads/testing_db.sql
ddev robo local:update ed.local
ddev import-db --database=ed --file=~/Downloads/jim_db.sql
ddev robo local:update ed.local
git pull
ddev robo local:update ed.local
ddev composer install
ddev drush @ed.local cr
ddev robo local:update ed.local
history | grep maint
ddev drush @ed.local state:set system.maintenance_mode 0 --input-format=integer
ddev robo local:update ed.local
ddev stop
ddev start
ddev com
ddev composer install
ddev import-db --database=ed --file=~/Downloads/jim_db.sql
ddev robo local:update ed.local
ddev stop
ddev start
ddev import-db --target-db=ed --src=~/Downloads/ed-export-3_18_2024.sql
git pull
ddev robo local:update ed.local
ddev stop
cd /Applications/Docker.app/Contents/MacOS/uninstall
/Applications/Docker.app/Contents/MacOS/uninstall
rm -rf ~/Library/Group\ Containers/group.com.docker
rm -rf ~/Library/Containers/com.docker.docker
rm -rf ~/.docker
sudo yabai --load-sa
z ed
git pull
ddev start
ddev import-db --target-db=ed --src=~/Downloads/ed-export-3_18_2024.sql
ddev robo local:update ed.local
sudo yabai --load-sa
brew upgrade
sudo yabai --load-sa
yabai space --focus 2
history | grep yabai
yabai -m space --focus 3
yabai
yabai --start-service
yabai
sudo yabai
z ed
ddev start
yabai 
yabai --start-service
z ed
git pull
ddev robo local:update ed.local
ping 192.168.120
ping 192.168.0.120
sudo yabai --load-sa
z edc
z ed
ddev start
z ed
git pull
ddev robo local:update ed.local
z ed
ddev import-db --database=ed --file=~/Downloads/testing_db.sql
ddev robo local:update ed.local
git pull
ddev composer install
ddev drush @ed.local cr
ddev composer install
ddev robo local:update ed.local
ddev start
git pull
ddev import-db --database=ed --file=~/Downloads/testing_db.sql
ddev composer install
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
z ed
cd ~
cat .skhdrc
z ed
git pull
ddev robo local:update ed.local
z ed 
git pull
ddev robo local:update ed.local
z ed 
git checkout dev
ddev robo local:update ed.local
git pull
ddev robo local:update ed.local
ddev describe
z ed
ddev describe
ddev mailpit
z ed
ddev export-db --target-db=ed --file=testing_db.sql.gz
open .
z ed
git pull
ddev robo local:update ed.local
z ed
git pull
ddev composer install
ddev robo local:update ed.local
git pull
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
ssh nmccloskey@192.168.0.113
z ed
git pull
ddev robo local:update ed.local
z ed 
git pull
ddev robo local:update ed.local
z ed 
git pull
ddev robo local:update ed.local
sudo yabai --load-sa
z ed
git pull
ddev robo local:update ed.local
git pull
ddev composer install
ddev robo local:update ed.local
git pull
ddev composer install
ddev robo local:update ed.local
ddev drush @ed.local cr
ddev robo local:update ed.local
git pull
ddev start
open .
ddev composer install
ddev import-db --database=ed --file=./tesing_db.sql
ls
ddev import-db --database=ed --file=./testing_db.sql
ddev composer install
ddev robo local:update ed.local
ddev start
ddev import-db --database=ed --file=~/Downloads/jim_db.sql
ddev composer install
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
ddev import-db --database=ed --file=~/Downloads/testing_db.sql
ddev composer install
ddev robo local:update ed.local
ddev git pull
git pull
ddev robo local:update ed.local
ddev drush @ed.local cr
ddev robo local:update ed.local
ddev start
ddev import-db --database=ed --file=~/Downloads/testing_db.sql
ddev composer install
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
z ed  
git pull
z ed
git pull
ddev robo local:update ed.local
ssh nmccloskey@192.168.0.113
z ed
git pu
git pull
ddev robo local:update ed.local
sudo yabai --load-sa
z ed
ddev describe
git pull
ddev start
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
git pull
ddev robo local:update ed.local
exit
ping 192.168.0.130
192.168.0.105
ping 192.168.0.105
ping 192.168.0.108
ping 192.168.0.120
z ed 
git pull
ddev robo local:update ed.local
z ed
ddev composer require 'drupal/usfedgov_google_analytics:^2.0'
z ed
git pull
ddev robo local:update ed.local
ddev describe
z ed
ddev describe
ddev drush @ed.local cex -y
ddev export-db --target-db=ed --file=testing_db.sql.gz
open .
z ed
git pull
ddev robo local:update ed.local
ddev composer i
ddev composer install
ddev robo local:update ed.local
ddev drush @ed.local cr
ddev robo local:update ed.local
z ed
ddev launch -m
z ed
git pull
ddev composer install
ddev robo local:update ed.local
z ed
git pull
z ed
ddev launch -m
z ed
git pull
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
git pull
ddev robo local:update ed.local
z ed
git pull
z ed
git pull
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
z ed 
git pull
ddev robo local:update ed.local
git pull
ddev robo local:update ed.local
z ed
ddev stop
z ed
ddev start
ddev db-import --src=~/Downloads/testing_db.sql.gz
ddev import-db --database=ed --file=~/Downloads/testing_db.sql
ddev composer install
ddev robo local:update ed.local
git pull
ddev drush @ed.local cr
ddev robo local:update ed.local
ddev describe
history | grep solr
ddev drush @ed.local search-api-solr:upload-configset ed 
ddev drush @ed.local search-api-solr:upload-configset ed 1
ddev robo local:update ed.local
ddev drush @ed.local search-api-solr:upload-configset ed 1
ddev drush @ed.local search-api-solr:upload-configset ed
z ed
git pull
ddev robo local:update ed.local
z ed
open .
git pull
ddev robo local:update ed.local
git pull
ddev robo local:update ed.local
git pull
ddev robo local:update ed.local
z ed
git pull
z ed
git pull
ddev robo local:update ed.local
git pull
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
z qm
ls
vim keymap.c
z ed 
git pull
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
z /Users/nmccloskey/qmk_firmware/keyboards/bastardkb/charybdis/4x6/keymaps/rudamentary99
nim keymap.c
nvim keymap.c
z ed
git pull
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
git pull
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
git pull
ddev robo local:update ed.local
ddev composer install
ddev robo local:update ed.local
ddev drush @ed.local cr
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
git pull
ddev robo local:update ed.local
git pull
ddev robo local:update ed.local
z ~
cat .skhdrc
nvim .skhdrc
z ed
git pull
ddev robo local:update ed.local
git pull
ddev robo local:update ed.local
git pull
ddev robo local:update ed.local
git pull
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
git pull
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
git pull
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
git pull
ddev robo local:update ed.local
git pull
ddev robo local:update ed.local
git pull
ddev robo local:update ed.local
git pull
ddev robo local:update ed.local
git pull
ddev robo local:update ed.local
exit
z ed
git pull
ddev robo local:update ed.local
/Users/nmccloskey/.pyenv/versions/3.12.0/bin/python /Users/nmccloskey/.vscode/extensions/ms-python.python-2024.4.1/python_files/printEnvVariablesToFile.py /Users/nmccloskey/.vscode/extensions/ms-python.python-2024.4.1/python_files/deactivate/zsh/envVars.txt
	git checkout dev
git pull
ddev robo local:update ed.local
git pull
ddev robo local:update ed.local
git pull
ddev robo local:update ed.local
git pull
ddev robo local:update ed.local
git pull
ddev robo local:update ed.local
git pull
ddev robo local:update ed.local
git pul
git pull
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
git pull
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
git pull
ddev robo local:update ed.local
git pull
z ed
git pull
ddev robo local:update ed.local
z ed
git pul
git pull
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
git pull
ddev robo local:update ed.local
git checkout dev
git pull
ddev robo local:update ed.local
git pull
ddev robo local:update ed.local
git pull
ddev robo local:update ed.local
z githug
z github
mkdir fay-strong-site
cd fay-strong-site
cd ..
rm fay-strong-site
mkdir eleventy-fay-strong
cd fay-strong-site
cd ..
rm fay-strong-site
cd eleventy-fay-strong
vim
vim 
z /Users/nmccloskey/Documents/GitHub/eleventy-fay-strong
npm init -y
npm i @11ty/eleventy
npx eleventy --serve
mkdir /src/_included/layouts
mkdir -p /src/_includes/layouts
npm start
code . -n
z /Users/nmccloskey/Documents/GitHub/eleventy-fay-strong
npm start
npm init -y
npm i @11ty/eleventy
npm start
z ed
ddev robo local:update ed.local
git pull
ddev robo local:update ed.local
z ed
git pull
npm start
open .
history | grep ddev
z ed
git pull
ddev robo local:update ed.local
ddev composer install
ddev drush @ed.local cr
ddev robo local:update ed.local
ddev export-db --target-db=ed --file=testing_db.sql.gz
open .
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
git pull
z ed
git pull
ddev robo local:update ed.local
git pull
git status
ddev drush @ed.local cr
desktop
git pull
ddev robo local:update ed.local
git checkout dev
git pul
git pull
ddev robo local:update ed.local
git pull
ddev robo local:update ed.local
git pull
ddev robo local:update ed.local
z ~
cat .skhdrc
git pull
z ed
git pull
ddev robo local:update ed.local
z ed
git pu
git pull
ddev robo local:update ed.local
git pull
ddev robo local:update ed.local
git pull
ddev robo local:update ed.local
git pull
ddev robo local:update ed.local
git pull
ddev robo local:update ed.local
git pull
ddev robo local:update ed.local
cat ~/.skhdrc
vi ~/.skhdrc
jq
xargs
brew install jq
jq
ctrl - p : yabai -m query --spaces --space \\
            | jq -re ".index" \\
            | xargs -I{} yabai -m query --windows --space {} \\
            | jq -sre "add | map(select(.minimized != 1)) | sort_by(.display, .frame.y, .frame.x, .id) | reverse |\
nth(index(map(select(.focused == 1))) - 1).id" \\
            | xargs -I{} yabai -m window --focus {}
jq -re ".index"
yabai -m query --spaces -space
yabai -h
vi ~/.skhdrc
yabai -m query --spaces
ctrl - p : yabai -m query --spaces \\
            | jq -re ".index" \\
            | xargs -I{} yabai -m query --windows --space {} \\
            | jq -sre "add | map(select(.minimized != 1)) | sort_by(.display, .frame.y, .frame.x, .id) | reverse |\
nth(index(map(select(.focused == 1))) - 1).id" \\
            | xargs -I{} yabai -m window --focus {}
ctrl - p : yabai -m query --spaces \\
            | jq -re ".index" \\
            | xargs -I{} yabai -m query --windows --space {} 
ctrl - p : yabai -m query --spaces \\
            | jq -re ".index" \\
            | xargs -I{} yabai -m query --windows --space {} \\
            | jq -sre "add | map(select(.minimized != 1)) | sort_by(.display, .frame.y, .frame.x, .id) | reverse |\
nth(index(map(select(.focused == 1))) - 1).id" \\
            | xargs -I{} yabai -m window --focus {}
nvim ~/.skhdrc
yabai -m window --focus stack.next
yabai -m window --focus stack.first
yabai -m window --focus stack.next || yabai -m window --focus stack.first
yabai -m query --windows
yabai -m query --window
exit
exit
git pull
z ed
git pull
ddev robo local:update ed.local
ddev drush @ed.local cr
ddev composer install
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
git pull
ddev robo local:update ed.local
git pull
ddev robo local:update ed.local
git pull
ddev robo local:update ed.local
git pull
ddev robo local:update ed.local
ping 192.168.0.120
ping 192.168.0.108
git pull
ddev robo local:update ed.local
git pull
ddev robo local:update ed.local
git pull
ddev robo local:update ed.local
git pull
ddev robo local:update ed.local
ddev drush @ed.local cr
ddev stop
reboot
z ed
git pull
z ed
ddev start
git pull
ddev robo local:update ed.local
yabai --start-service
sudo yabai --load-sa
skhd
z ed
git checkout dev
git pull
ddev robo local:update ed.local
git pull
ddev robo local:update ed.local
git pull
ddev robo local:update ed.local
git pull
z ed 
git pull
ddev robo local:update ed.local
git pull
ddev robo local:update ed.local
ddev drush @ed.local cr
ddev robo local:update ed.local
ddev export-db --target-db=ed --file=~/Downloads/testing_db.sql.gz
ddev export-db --target-db=ed --file=~/Documents/testing_db.sql.gz
ddev export-db --target-db=ed --file=../../testing_db.sql.gz
open ../..
ddev stop
ddev start
ddev composer install
ddev import-db --database=ed --file=~/Documents/testing_db.sql.gz
ddev composer install
ddev robo local:update ed.local
docker run -d --restart unless-stopped --net host --device /dev/snd \\
    mikebrady/shairport-sync
git pull
ls
cd /web
ls
cd web
ls
themes/custom
edgov
gulp
gulp watch
ddev gulp watch
z ed
git checkout dev
git pull
ddev robo local:update ed.local
ping 192.168.0.120
ssh nmccloskey@192.168.0.113
ssh nmccloskey@lepotato1
ssh nmccloskey@192.168.0.109
ssh ubuntu@192.168.0.109
ssh root@192.168.0.120
ping 192.168.0.120
ssh root@192.168.0.120
ping 192.168.0.120
ssh root@192.168.0.120
ping 192.168.0.120
ssh root@192.168.0.120
ping 192.168.0.120
ssh root@192.168.0.120
ssh root@192.168.0.106
ssh root@192.168.0.130
ssh nmccloskey@192.168.0.130
ssh pi@192.168.0.117
git pull
z ed
git pull
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
git pull
ddev robo local:update ed.local
git pull
ddev robo local:update ed.local
ddev describ3e
ddev describe
ddev mailpit
git pull
z eleventy
npm install node-fetch
npm install @11ty/eleventy-cache-assets
npm uninstall node-fetch
npm start
z ed
git pull
ddev robo local:update ed.local
git pull
ssh nmccloskey@192.168.0.118
ssh root@192.168.0.118
nvim /Users/nmccloskey/.ssh/known_hosts
ssh nmccloskey@192.168.0.118
ssh root@192.168.0.118
git pull
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
ddev mailpit
git pull
ddev robo local:update ed.local
cd ~/Documents
php ./temp.php
php ./temp.php 
z ed
git pull
ddev robo local:update ed.local
git pull
z ed
git pull
ddev robo local:update ed.local
z ed
git pull
git pul
git pull
ddev robo local:update ed.local
ddev composer install
ddev drush @ed.local cr
ddev robo local:update ed.local
git pull
ddev robo local:update ed.local
git checkout dev
git pull
ddev robo local:update ed.local
ddev export-db --target-db=ed --file=../../testing_db.sql.gz
sudo yabai --load-sa
brew upgrade
git pull
ddev robo local:update ed.local
git pull
ddev robo local:update ed.local
sudo yabai --load-sa
yabai --start-service
sudo yabai --load-sa
z ed
git checkout dev
git pull
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
git pull
ddev robo local:update ed.local
ddev drush @ed.local cr
ddev robo local:update ed.local
git checkout dev
git pull
ddev drush @ed.local cr
ddev composer install
ddev robo local:update ed.local
ddev composer install
git checkout dev
ddev composer install
ddev drush @ed.local cr
ddev robo local:update ed.local
git pull
ddev robo local:update ed.local
git pull
ddev drush @ed.local cr
ddev composer install
ddev robo local:update ed.local
git pull
ddev robo local:update ed.local
git pull
ddev robo local:update ed.local
ddev drush @ed.local cr
ddev robo local:update ed.local
ddev drush @ed.local entity:delete node --bundle=ed_program_or_grant
ddev drush @ed.local genc --kill --types=ed_program_or_grant 00
ddev drush @ed.local genc --kill --types=ed_program_or_grant 0 0
ddev drush @ed.local entity:delete node --bundle=ed_program_or_grant
ddev robo local:update ed.local
git pull
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
git pull
ddev robo local:update ed.local
ddev drush @ed.local cr
git pull
ddev robo local:update ed.local
git pull
ddev robo local:update ed.local
git pull
ddev robo local:update ed.local
z ed && git pull
ddev robo local:update ed.local
z ed 
git pull
ddev robo local:update ed.local
git pull
ddev robo local:update ed.local
z ed 
git pul
git pull
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
git pull
ddev robo local:update ed.local
ddev drush @ed.local cr
git pull
ddev robo local:update ed.local
git pull
ddev robo local:update ed.local
z ed 
git pull
ddev robo local:update ed.local
ddev drush @ed.local cr
ddev robo local:update ed.local
z ed
ddev robo local:update ed.local
npm start
npm install
npm install moment
npm start
z ed
git pull
ddev robo local:update ed.local
git pull
z ed
git pull
ddev robo local:update ed.local
ddev describ
ddev describe
hsitory | grep solr
history | grep solr
ddev drush @ed.local search-api-solr:upload-configset ed
ddev drush @ed.local search-api-solr:upload-configset ed 1
z ed
git pull
ddev robo local:update ed.local
gunzip pfSense-CE-2.7.2-RELEASE-amd64.iso.gz
npm start
npm i
npm run dev
npm update
npm run dev
npm run storybook
npm i sass
npm run dev
npm install gulp-clean-css gulp-sass@4.1.0 sass
npm install gulp-clean-css gulp-sass sass
npm i eleventy-sass
npm install eleventy-sass
npm install --save-dev @jgarber/eleventy-plugin-sass
npm run dev
npm install --save-dev @jgarber/eleventy-plugin-sass
npm run dev
npm i
npm run dev
npm install --save-dev @jgarber/eleventy-plugin-sass
npm run dev
npm update @11ty/eleventy -g
npm update @11ty/eleventy 
npm run dev
npm update @11ty/eleventy --save
npm run dev
npm install @11ty/eleventy@2
npm run dev
npm install eleventy-sass
npm run dev
history tooll
npm run storybook
z ed
git pull
ddev robo local:update ed.local
z ed
git pull
ddev drush @ed.local cr
ddev robo local:update ed.local
git pull
ddev robo local:update ed.local
git pulll
git pull
ddev robo local:update ed.local
git pulpl
git pull
ddev robo local:update ed.local
git pull
ddev robo local:update ed.local
git pull
ddev robo local:update ed.local
git pull
ddev robo local:update ed.local
git pull
ddev robo local:update ed.local
git pul
git pull
ddev robo local:update ed.local
npm run storybook
npm i
npm run storybook
npm run
npm run storybook
npm start
npm run dev
npm run storybook
z ed
git pull
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
npm run storybook
npm run dev
npm start
npm run  
npm run build-storybook
npm run dev
npm i eleventy-sass
npm run dev
npm start
npm i bootstrap
npm start
npm uninstall bootstrap
npm start
git pull
z ed
git pull
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
git pull
ddev robo local:update ed.local
ddev drush @ed.local cr
z ed
git pul
git pull
npm start
npm install --save-dev @jgarber/eleventy-plugin-sass
npm start
npm i sass
npm start
npm i bootstrap
npm start
sass --help
npm install -g sass
sass --help
brew install sass/sass/sass
sass --help
sass
npm start
z ed
git pull
ddev robo local:update ed.local
npm start
z ed
git pull
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
z ed
git pull
z ed
git pull
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
z ed
ddev start
ddev drush @ed.local cr
ddev ro
ddev robo local:update ed.local
git pull
z ed
git pull
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
z ed
git pull
z ed
git pull
ddev robo local:update ed.local
npm start
z ed
ddev start
git pull
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
z ed
git pull
z ed
git pull
ddev robo local:update ed.local
z ed
git pull
z ed
git pull
ddev robo local:update ed.local
z ed
composer require 'drupal/media_bulk_upload:^3.0'
ddev composer require 'drupal/media_bulk_upload:^3.0'
ping 8.8.8.8
9.9.9.9
ping 9.9.9.9
ping 1.1.1.1
ping 104.192.136.3
z ed
git pull
ddev robo local:update ed.local
z ed
git pull
z ed
git pull
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
z ed
ddev drush @ed.local cr
git pul
git pull
ddev drush @ed.local cr
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
/opt/homebrew/bin/git -C "/Users/nmccloskey/Documents/GitHub/ed-gov" -c "core.editor=code --wait --reuse-window" revert --no-edit 4669c576780360b0432d1dd31ebc7810b53931a3
/opt/homebrew/bin/git -C "/Users/nmccloskey/Documents/GitHub/ed-gov" -c "core.editor=code --wait --reuse-window" revert --no-edit 7583af891635604a665cdc805f15e38bdbcf60c0
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
z ed
git pull
z ed 
ddev robo local:update ed.local
z ed
git pull
ddev robo local:update ed.local
z ed
ddev robo local:update ed.local
z ed
ddev robo local:update ed.local
z ed
git checkout dev
git pull
ddev robo local:update ed.local
ping 10.96.0.54
z ed
git pull
ddev robo local:update ed.local
git checkout
git checkout dev
ping 192.168.20.11
: 1721073148:0;ls .skhdrc
: 1721073153:0;cat ~/.skhdrc
: 1721073170:0;ls
: 1721073190:0;defaults write com.apple.finder AppleShowAllFiles YES
: 1721073230:0;ls
: 1721073231:0;pwd
